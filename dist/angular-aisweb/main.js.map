{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/data.service.ts","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/guards/auth.guard.ts","./src/app/leaflet-map/leaflet-map.component.ts","./src/app/leaflet-map/leaflet-map.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/circle-zone-handler.ts","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/main/polygon-zone-handler.ts","./src/app/mainlayout/mainlayout.component.ts","./src/app/mainlayout/mainlayout.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/newfitur/newfitur.component.ts","./src/app/newfitur/newfitur.component.html","./src/app/notification/notification.component.ts","./src/app/notification/notification.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/add-coordinate.service.ts","./src/app/services/auth.service.ts","./src/app/services/base-layer.service.ts","./src/app/services/circle-zone-handler.ts","./src/app/services/circle-zone.service.ts","./src/app/services/draw-control.service.ts","./src/app/services/heatmap.service.ts","./src/app/services/icon.service.ts","./src/app/services/map.service.ts","./src/app/services/marker.service.ts","./src/app/services/notification.service.ts","./src/app/services/playback.service.ts","./src/app/services/polygon-zone-handler.ts","./src/app/services/polygon-zone.service.ts","./src/app/services/searchcontrol.service.ts","./src/app/services/shape-data-handler.service.ts","./src/app/services/shapeService.ts","./src/app/services/socket.service.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/tables/tables.component.ts","./src/app/tables/tables.component.html","./src/app/uiconfigurator/uiconfigurator.component.ts","./src/app/uiconfigurator/uiconfigurator.component.html","./src/main.ts","./node_modules/moment/locale/ sync ^\\.\\/.*$","ignored|D:\\PROJECT KMIPN\\AisProject\\myapp\\node_modules\\object-inspect|./util.inspect"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { NewfiturComponent } from './newfitur/newfitur.component';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { MainlayoutComponent } from './mainlayout/mainlayout.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    children: [\r\n      { path: '', component: LoginComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent,\r\n    children: [\r\n      { path: '', component: RegisterComponent }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: MainlayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'dashboard', component: DashboardComponent },\r\n      { path: 'tables', component: TablesComponent },\r\n      { path: 'newfitur', component: NewfiturComponent },\r\n      { path: 'notifications', component: NotificationComponent },\r\n      { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\r\n    ]\r\n  },\r\n  { path: '**', redirectTo: 'login' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CircleZoneHandler } from './services/circle-zone-handler';\nimport { PolygonZoneHandler } from './services/polygon-zone-handler';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'AIS Asset Web App';\n  polygonZones: any[] = [];\n  circleZones: any[] = [];\n  ships: any[] = [];\n  previousShips: any[] = []; // Menyimpan data kapal sebelumnya\n\n  constructor(\n    private dataService: DataService,\n    private circleZoneHandler: CircleZoneHandler,\n    private polygonZoneHandler: PolygonZoneHandler\n  ) {}\n\n  ngOnInit() {\n    this.loadZones();\n    this.monitorShips();\n  }\n\n  loadZones() {\n    this.polygonZoneHandler.loadPolygonZones().subscribe(zones => {\n      this.polygonZones = zones;\n    });\n\n    this.circleZoneHandler.loadCircleZones().subscribe(zones => {\n      this.circleZones = zones;\n    });\n  }\n\n  monitorShips() {\n    // Menggunakan combineLatest untuk menunggu kedua zona dan data kapal\n    combineLatest([\n      this.polygonZoneHandler.loadPolygonZones(),\n      this.circleZoneHandler.loadCircleZones(),\n      this.dataService.getShipsDataPeriodically()\n    ]).subscribe(([polygonZones, circleZones, ships]) => {\n      this.polygonZones = polygonZones;\n      this.circleZones = circleZones;\n      this.ships = ships;\n\n      // Panggil checkShipsInZones hanya jika ada kapal baru atau aplikasi baru dibuka\n      if (this.previousShips.length === 0 || this.ships.length !== this.previousShips.length) {\n        this.dataService.checkShipsInZones(this.polygonZones, this.circleZones, this.ships);\n      }\n\n      // Perbarui previousShips dengan data kapal terbaru\n      this.previousShips = [...this.ships];\n    });\n  }\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { UiconfiguratorComponent } from './uiconfigurator/uiconfigurator.component';\r\nimport { AppService } from './app.service';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { NewfiturComponent } from './newfitur/newfitur.component';\r\nimport { LeafletMapComponent } from './leaflet-map/leaflet-map.component';\r\nimport { DataService } from './data.service';\r\nimport { ChartComponent } from './chart/chart.component';\r\nimport { FormsModule } from '@angular/forms'; // Import FormsModule here\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { NotificationComponent } from './notification/notification.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { MainlayoutComponent } from './mainlayout/mainlayout.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    SidebarComponent,\r\n    MainComponent,\r\n    FooterComponent,\r\n    UiconfiguratorComponent,\r\n    DashboardComponent,\r\n    TablesComponent,\r\n    NewfiturComponent,\r\n    LeafletMapComponent,\r\n    ChartComponent,\r\n    NotificationComponent,\r\n    LoginComponent,\r\n    MainlayoutComponent,\r\n    RegisterComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgApexchartsModule, // Import NgApexchartsModule\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    MatSnackBarModule,\r\n    MatDialogModule,MatButtonModule, MatListModule,\r\n    MatIconModule,\r\n    MatCardModule,MatInputModule\r\n  ],\r\n  providers: [AppService, DataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// app.service.ts\n\nimport { Injectable } from '@angular/core';\ndeclare var toggleSidenav: any;\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n    private apiUrl = 'https://api.example.com';\n\n  constructor(private http: HttpClient) { }\n\n  get(endpoint: string): Observable<any> {\n    return this.http.get(`${this.apiUrl}/${endpoint}`);\n  }\n\n  post(endpoint: string, data: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/${endpoint}`, data);\n  }\n  private isPluginVisible: boolean = false;\n  callToggleSidenav() {\n    // Panggil fungsi toggleSidenav dengan id \"sidenav-main\"\n    toggleSidenav(\"sidenav-main\");\n  }\n  togglePluginVisibility() {\n    this.isPluginVisible = !this.isPluginVisible;\n  }\n\n\n  closeFixedPlugin() {\n    this.isPluginVisible = false;\n  }\n\n  getIsPluginVisible(): boolean {\n    return this.isPluginVisible;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApexAxisChartSeries, ApexChart, ApexXAxis, ApexYAxis, ApexStroke, ApexDataLabels, ApexGrid, ApexFill, ApexMarkers, ApexTooltip, ApexPlotOptions, ApexLegend, ApexTitleSubtitle } from 'ng-apexcharts';\n\nexport type ChartOptions = {\nsubtitle: ApexTitleSubtitle;\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  stroke?: ApexStroke;\n  dataLabels?: ApexDataLabels;\n  grid?: ApexGrid;\n  xaxis?: ApexXAxis;\n  yaxis?: ApexYAxis | ApexYAxis[];\n  fill?: ApexFill;\n  markers?: ApexMarkers;\n  tooltip?: ApexTooltip;\n  plotOptions?: ApexPlotOptions;\n  labels?: string[];\n  legend?: ApexLegend;\n  colors?: string[];\n  title?: ApexTitleSubtitle;\n};\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n  @Input()\n  chartOptions!: ChartOptions;\n  @Input()\n  chartId!: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<apx-chart\n  [series]=\"chartOptions.series\"\n  [chart]=\"chartOptions.chart\"\n  [stroke]=\"chartOptions.stroke || {}\"\n  [dataLabels]=\"chartOptions.dataLabels || {}\"\n  [grid]=\"chartOptions.grid || {}\"\n  [xaxis]=\"chartOptions.xaxis || {}\"\n  [yaxis]=\"chartOptions.yaxis || {}\"\n  [fill]=\"chartOptions.fill || {}\"\n  [markers]=\"chartOptions.markers || {}\"\n  [tooltip]=\"chartOptions.tooltip || {}\"\n  [plotOptions]=\"chartOptions.plotOptions || {}\"\n  [labels]=\"chartOptions.labels || []\"\n  [legend]=\"chartOptions.legend || {}\"\n  [colors]=\"chartOptions.colors || []\"\n  [title]=\"chartOptions.title || {}\"\n  [subtitle]=\"chartOptions.subtitle || {}\">\n</apx-chart>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { PolygonZoneHandler } from '../services/polygon-zone-handler';\nimport { CircleZoneHandler } from '../services/circle-zone-handler';\nimport {\n  ApexChart,\n  ApexNonAxisChartSeries,\n  ApexResponsive,\n  ApexTitleSubtitle,\n  ApexXAxis,\n  ApexPlotOptions\n} from 'ng-apexcharts';\n\nconst shipTypeNames: { [key: number]: string } = {\n  20: 'Tug', 21: 'Tug', 22: 'Tug', 23: 'Tug', 24: 'Tug', 25: 'Tug', 26: 'Tug', 27: 'Tug', 28: 'Tug', 29: 'Unspecified',\n  30: 'Fishing', 31: 'Tug', 32: 'Tug', 33: 'AntiPollution', 34: 'LawEnforcement', 35: 'Medical', 36: 'Military', 37: 'Military', 38: 'Sailing', 39: 'Pleasure',\n  40: 'Highspeed', 41: 'Highspeed', 42: 'Highspeed', 43: 'Highspeed', 44: 'Highspeed', 45: 'Highspeed', 46: 'Highspeed', 47: 'Highspeed', 48: 'Highspeed', 49: 'Highspeed',\n  50: 'Passenger', 51: 'Passenger', 52: 'Passenger', 53: 'Passenger', 54: 'Passenger', 55: 'Passenger', 56: 'Passenger', 57: 'Passenger', 58: 'Passenger', 59: 'Passenger',\n  60: 'Cargo', 61: 'Cargo', 62: 'Cargo', 63: 'Cargo', 64: 'Cargo', 65: 'Cargo', 66: 'Cargo', 67: 'Cargo', 68: 'Cargo', 69: 'Cargo',\n  70: 'Cargo', 71: 'Cargo', 72: 'Cargo', 73: 'Cargo', 74: 'Cargo', 75: 'Cargo', 76: 'Cargo', 77: 'Cargo', 78: 'Cargo', 79: 'Cargo',\n  80: 'Tanker', 81: 'Tanker', 82: 'Tanker', 83: 'Tanker', 84: 'Tanker', 85: 'Tanker', 86: 'Tanker', 87: 'Tanker', 88: 'Tanker', 89: 'Tanker',\n  90: 'Pilot', 91: 'SearchAndRescue', 92: 'Tug', 93: 'PortTender', 94: 'AntiPollution', 95: 'LawEnforcement', 96: 'Medical', 97: 'Military', 98: 'Sailing', 99: 'Pleasure'\n};\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  responsive: ApexResponsive[];\n  labels: any;\n  title: ApexTitleSubtitle;\n  xaxis?: ApexXAxis;\n  dataLabels?: any;\n  plotOptions?: ApexPlotOptions;\n};\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  public pieChartOptions: Partial<ChartOptions> | any;\n  public barChartOptions: Partial<ChartOptions> | any;\n  public lineChartOptions: Partial<ChartOptions> | any;\n  ships: any[] = [];\n  polygonZones: any[] = [];\n  circleZones: any[] = [];\n  selectedZoneType: string = '';\n  selectedZone: any = null;\n\n  @ViewChild('chart') chart: any;\n\n  constructor(\n    private dataService: DataService,\n    private polygonZoneHandler: PolygonZoneHandler,\n    private circleZoneHandler: CircleZoneHandler\n  ) {\n    this.pieChartOptions = {\n      series: [],\n      chart: {\n        width: 380,\n        type: 'pie'\n      },\n      labels: [],\n      title: {\n        text: 'Ship Types in Selected Zone'\n      },\n      responsive: [\n        {\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }\n      ]\n    };\n\n    this.barChartOptions = {\n      series: [],\n      chart: {\n        type: 'bar',\n        height: 350\n      },\n      title: {\n        text: 'Ship Types in Selected Zone (Bar Chart)'\n      },\n      xaxis: {\n        categories: []\n      }\n    };\n\n    this.lineChartOptions = {\n      series: [],\n      chart: {\n        type: 'area',\n        height: 350\n      },\n      title: {\n        text: 'Ship Types Over Time'\n      },\n      xaxis: {\n        categories: []\n      },\n      dataLabels: {\n        enabled: false\n      },\n      plotOptions: {\n        area: {\n          fillTo: 'end'\n        }\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.loadPolygonZones();\n    this.loadCircleZones();\n    this.loadShips();\n  }\n\n  loadPolygonZones() {\n    this.polygonZoneHandler.loadPolygonZones().subscribe((data: any) => {\n      this.polygonZones = data;\n    });\n  }\n\n  loadCircleZones() {\n    this.circleZoneHandler.loadCircleZones().subscribe((data: any) => {\n      this.circleZones = data;\n    });\n  }\n\n  loadShips() {\n    this.dataService.getShipsData().subscribe(data => {\n      this.ships = data;\n      this.updateChart();\n    }, error => console.error('Failed to load ships:', error));\n  }\n\n  generateChartData(filteredShips: any[]) {\n    const shipTypes: { [key: string]: number } = {};\n    const shipTypesOverTime: { [key: string]: { [key: string]: number } } = {};\n\n    filteredShips.forEach(ship => {\n      const typeName = shipTypeNames[ship.type] || 'Unspecified';\n      const timestampParts = ship.timestamp.split(' ');\n      const dateParts = timestampParts[0].split('-');\n      const timestamp = new Date(`${dateParts[2]}-${dateParts[1]}-${dateParts[0]}T${timestampParts[1]}`).toLocaleDateString();\n\n      if (shipTypes[typeName]) {\n        shipTypes[typeName]++;\n      } else {\n        shipTypes[typeName] = 1;\n      }\n\n      if (!shipTypesOverTime[timestamp]) {\n        shipTypesOverTime[timestamp] = {};\n      }\n\n      if (shipTypesOverTime[timestamp][typeName]) {\n        shipTypesOverTime[timestamp][typeName]++;\n\n      } else {\n        shipTypesOverTime[timestamp][typeName] = 1;\n      }\n    });\n\n    const series = Object.values(shipTypes);\n    const labels = Object.keys(shipTypes);\n\n    this.pieChartOptions.series = series;\n    this.pieChartOptions.labels = labels;\n\n    this.barChartOptions.series = [{ name: 'Ships', data: series }];\n    this.barChartOptions.xaxis = { categories: labels };\n\n    const timestamps = Object.keys(shipTypesOverTime).sort();\n    const areaSeries = labels.map(label => ({\n      name: label,\n      data: timestamps.map(timestamp => shipTypesOverTime[timestamp][label] || 0)\n    }));\n\n    this.lineChartOptions.series = areaSeries;\n    this.lineChartOptions.xaxis = { categories: timestamps };\n\n  }\n\n  onZoneTypeChange(type: string) {\n    this.selectedZoneType = type;\n    this.selectedZone = null;\n    this.updateChart();\n  }\n\n  onZoneChange(zone: any) {\n    this.selectedZone = zone;\n    this.updateChart();\n  }\n\n  updateChart() {\n    if (!this.selectedZone || !this.ships.length) {\n      this.pieChartOptions.series = [];\n      this.pieChartOptions.labels = [];\n      this.barChartOptions.series = [];\n      this.barChartOptions.xaxis = { categories: [] };\n      this.lineChartOptions.series = [];\n      this.lineChartOptions.xaxis = { categories: [] };\n      return;\n    }\n\n    const filteredShips = this.ships.filter(ship => this.isShipInZone(ship, this.selectedZone, this.selectedZoneType));\n    this.generateChartData(filteredShips);\n  }\n\n  isShipInZone(ship: any, zone: any, type: string): boolean {\n    if (type === 'circle') {\n      return this.circleZoneHandler.isShipInZone(ship, zone);\n    } else if (type === 'polygon') {\n      return this.polygonZoneHandler.isShipInZone(ship, zone);\n    }\n    return false;\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n        <mat-label style=\"color: black;\">Select Zone Type</mat-label>\n        <mat-select style=\"color: black;\" (selectionChange)=\"onZoneTypeChange($event.value)\">\n          <mat-option value=\"polygon\">Polygon Zone</mat-option>\n          <mat-option value=\"circle\">Circle Zone</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"col-md-4\" *ngIf=\"selectedZoneType === 'polygon'\">\n      <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n        <mat-label style=\"color: black;\">Select Polygon Zone</mat-label>\n        <mat-select style=\"color: black;\" (selectionChange)=\"onZoneChange($event.value)\">\n          <mat-option style=\"color: black;\" *ngFor=\"let zone of polygonZones\" [value]=\"zone\">{{ zone.properties?.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"col-md-4\" *ngIf=\"selectedZoneType === 'circle'\">\n      <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n        <mat-label style=\"color: black;\">Select Circle Zone</mat-label>\n        <mat-select style=\"color: black;\" (selectionChange)=\"onZoneChange($event.value)\">\n          <mat-option style=\"color: black;\" *ngFor=\"let zone of circleZones\" [value]=\"zone\">{{ zone.properties?.name }}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"row mt-4\">\n    <div class=\"col-md-12 col-md-8 d-flex justify-content-center\" >\n      <apx-chart [series]=\"pieChartOptions.series\" [chart]=\"pieChartOptions.chart\" [title]=\"pieChartOptions.title\" [labels]=\"pieChartOptions.labels\"></apx-chart>\n    </div>\n  </div>\n  <div class=\"row mt-4\">\n    <div class=\"col-md-12\">\n      <apx-chart [series]=\"barChartOptions.series\" [chart]=\"barChartOptions.chart\" [title]=\"barChartOptions.title\" [xaxis]=\"barChartOptions.xaxis\"></apx-chart>\n    </div>\n  </div>\n  <div class=\"row mt-4\">\n    <div class=\"col-md-12\">\n      <apx-chart [series]=\"lineChartOptions.series\" [chart]=\"lineChartOptions.chart\" [title]=\"lineChartOptions.title\" [xaxis]=\"lineChartOptions.xaxis\"></apx-chart>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { interval, Observable, Subject, switchMap } from 'rxjs';\r\nimport { CircleZoneHandler } from './services/circle-zone-handler';\r\nimport { PolygonZoneHandler } from './services/polygon-zone-handler';\r\nimport { NotificationService } from './services/notification.service';\r\n\r\nexport interface ShipData {\r\n  mmsi: number;\r\n  lon: number;\r\n  lat: number;\r\n  name: string;\r\n  type: number;\r\n  timestamp: string;\r\n  destination?: string;\r\n}\r\n\r\nexport interface Zone {\r\n  type: 'polygon' | 'circle';\r\n  properties?: any;\r\n  coordinates: number[][] | number[][][];\r\n}\r\nexport interface AisLogData {\r\n  mmsi: number;\r\n  name: string;\r\n  logTime: string;\r\n  details: object[];\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataService {\r\n  private apiUrl = 'http://165.154.208.232:3000/api/ships'; // Ubah dengan API endpoint Anda\r\n  private zonesApiUrl = 'http://165.154.208.232:3000/api/shapes'; // API endpoint untuk zona\r\n  private dataLog = 'http://165.154.208.232:3000/api/ais-log';\r\n  private socketUrl = 'http://165.154.208.232:3000'; // Ubah dengan URL WebSocket server Anda\r\n  private socket!: Socket;\r\n  public shipDataStream = new Subject<ShipData[]>();\r\n  private shipZoneStatus: { [mmsi: number]: { [zoneId: string]: boolean } } =\r\n    {};\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private circleZoneHandler: CircleZoneHandler,\r\n    private polygonZoneHandler: PolygonZoneHandler,\r\n    private notificationService: NotificationService\r\n  ) {\r\n    this.initializeWebSocketConnection();\r\n  }\r\n  getAisLogData(): Observable<AisLogData[]> {\r\n    return this.http.get<AisLogData[]>(this.dataLog);\r\n  }\r\n  getShipsData(): Observable<ShipData[]> {\r\n    return this.http.get<ShipData[]>(this.apiUrl);\r\n  }\r\n\r\n  getZonesData(): Observable<Zone[]> {\r\n    return this.http.get<Zone[]>(this.zonesApiUrl);\r\n  }\r\n\r\n  getShipsDataPeriodically(): Observable<ShipData[]> {\r\n    return interval(30000).pipe(switchMap(() => this.getShipsData()));\r\n  }\r\n\r\n  checkShipsInZones(\r\n    polygonZones: Zone[],\r\n    circleZones: Zone[],\r\n    ships: ShipData[]\r\n  ): void {\r\n    polygonZones.forEach((zone) => {\r\n      ships.forEach((ship) => {\r\n        if (this.polygonZoneHandler.isShipInZone(ship, zone)) {\r\n          const zoneId = JSON.stringify(zone.coordinates); // Asumsikan koordinat adalah ID unik zona\r\n          const previousStatus =\r\n            this.shipZoneStatus[ship.mmsi]?.[zoneId] || false;\r\n            if ((this.polygonZoneHandler.isShipInZone(ship, zone) && !previousStatus)) {\r\n          const notificationMessage = `Ship ${ship.name} (${\r\n            ship.mmsi\r\n          }) entered ${zone.properties?.name || 'a polygon zone'}.`;\r\n          console.log(notificationMessage);\r\n          this.notificationService.addNotification({\r\n            message: notificationMessage,\r\n            timestamp: new Date().toLocaleTimeString(),\r\n          });\r\n        }\r\n        }\r\n      });\r\n    });\r\n\r\n    circleZones.forEach((zone) => {\r\n      ships.forEach((ship) => {\r\n        if (this.circleZoneHandler.isShipInZone(ship, zone)) {\r\n          const notificationMessage = `Ship ${ship.name} (${\r\n            ship.mmsi\r\n          }) entered ${zone.properties?.name || 'a circle zone'}.`;\r\n          console.log(notificationMessage);\r\n          this.notificationService.addNotification({\r\n            message: notificationMessage,\r\n            timestamp: new Date().toLocaleTimeString(),\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n  private initializeWebSocketConnection() {\r\n    this.socket = io(this.socketUrl, {\r\n      path: '/api/ships',\r\n    });\r\n    this.socket.on('connect', () =>\r\n      console.log('Connected to WebSocket server!')\r\n    );\r\n\r\n    this.socket.on('aisData', (data: ShipData[]) => {\r\n      console.log('Received ship data via WebSocket:', data);\r\n      this.shipDataStream.next(data);\r\n\r\n      this.getZonesData().subscribe((zones) => {\r\n        const polygonZones = zones.filter((zone) => zone.type === 'polygon');\r\n        const circleZones = zones.filter((zone) => zone.type === 'circle');\r\n\r\n        this.checkShipsInZones(polygonZones, circleZones, data);\r\n      });\r\n    });\r\n\r\n    this.socket.on('disconnect', () =>\r\n      console.log('Disconnected from WebSocket server')\r\n    );\r\n    this.socket.on('error', (error: any) =>\r\n      console.error('WebSocket error:', error)\r\n    );\r\n  }\r\n\r\n  getShipDataStream(): Observable<ShipData[]> {\r\n    return this.shipDataStream.asObservable();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row align-items-center justify-content-lg-between\">\n      <div class=\"col-lg-6 mb-lg-0 mb-4\">\n        <div class=\"copyright text-center text-sm text-muted text-lg-start\">\n          made with <i class=\"fa fa-heart\"></i> by\n          <a\n            href=\"https://therichpost.com\"\n            class=\"font-weight-bold\"\n            target=\"_blank\"\n            >Laksana Future</a\n          >\n          for a better web.\n        </div>\n      </div>\n      <div class=\"col-lg-6\">\n        <ul\n          class=\"nav nav-footer justify-content-center justify-content-lg-end\"\n        >\n          <li class=\"nav-item\">\n            <a\n              href=\"https://therichpost.com\"\n              class=\"nav-link text-muted\"\n              target=\"_blank\"\n              >Therichpost</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              href=\"https://therichpost.com\"\n              class=\"nav-link text-muted\"\n              target=\"_blank\"\n              >About Us</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              href=\"https://therichpost.com\"\n              class=\"nav-link text-muted\"\n              target=\"_blank\"\n              >Blog</a\n            >\n          </li>\n          <li class=\"nav-item\">\n            <a\n              href=\"https://therichpost.com\"\n              class=\"nav-link pe-0 text-muted\"\n              target=\"_blank\"\n              >License</a\n            >\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>   \n      \n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean {\r\n    const isLoggedIn = this.authService.isLoggedIn();\r\n\r\n    if (!isLoggedIn) {\r\n      this.router.navigate(['/login']); // Redirect ke login jika belum login\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { throttleTime } from 'rxjs/operators';\r\nimport { DataService } from '../data.service';\r\nimport { MapService } from '../services/map.service';\r\nimport { SocketService } from '../services/socket.service';\r\nimport { MarkerService } from '../services/marker.service';\r\nimport { HeatmapService } from '../services/heatmap.service';\r\n\r\n@Component({\r\n  selector: 'app-leaflet-map',\r\n  templateUrl: './leaflet-map.component.html',\r\n  styleUrls: ['./leaflet-map.component.css']\r\n})\r\nexport class LeafletMapComponent implements OnInit, OnDestroy {\r\n  private dataSubscription?: Subscription;\r\n  private aisUpdateSubscription?: Subscription;\r\n  private shapeUpdateSubscription?: Subscription;\r\n  searchQuery: string = '';\r\n  private zones: any[] = [];  // Array untuk menyimpan data zona\r\n  isFullscreen: boolean = false;\r\n\r\n  constructor(\r\n    private mapService: MapService,\r\n    private dataService: DataService,\r\n    private socketService: SocketService,\r\n    private markerService: MarkerService,  // Correct service for handling markers\r\n    private heatmapService: HeatmapService // Correct service for handling heatmaps\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.mapService.initializeMap('map');\r\n    this.setupRealtimeUpdates();\r\n    this.loadAndDisplayData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mapService.destroyMap();\r\n    this.socketService.disconnect();\r\n    this.dataSubscription?.unsubscribe();\r\n    this.aisUpdateSubscription?.unsubscribe();\r\n    this.shapeUpdateSubscription?.unsubscribe();\r\n  }\r\n\r\n  private loadAndDisplayData(): void {\r\n    this.dataSubscription = this.dataService.getShipsDataPeriodically().subscribe({\r\n      next: (data) => {\r\n        this.markerService.addMarkers(this.mapService.getMapInstance(), data); // Use the correct service for markers\r\n        this.heatmapService.addHeatMap(this.mapService.getMapInstance(), data); // Use the correct service for heatmaps\r\n      },\r\n      error: (error) => console.error('Failed to load data:', error)\r\n    });\r\n  }\r\n\r\n  private setupRealtimeUpdates(): void {\r\n    this.aisUpdateSubscription = this.socketService.onAisDataUpdate().pipe(\r\n      throttleTime(1000)\r\n    ).subscribe(data => {\r\n      this.markerService.addMarkers(this.mapService.getMapInstance(), [data]); // Use the correct service for markers\r\n      this.heatmapService.addHeatMap(this.mapService.getMapInstance(), [data]); // Use the correct service for heatmaps\r\n    });\r\n\r\n    this.shapeUpdateSubscription = this.socketService.onShapeDataUpdate().subscribe(data => {\r\n      this.markerService.addMarkers(this.mapService.getMapInstance(), [data]); // Use the correct service for markers\r\n      this.heatmapService.addHeatMap(this.mapService.getMapInstance(), [data]); // Use the correct service for heatmaps\r\n    });\r\n  }\r\n}\r\n","<div class=\"row mt-4\">\r\n  <div class=\"col-12 mt-4 mb-4\">\r\n    <div class=\"card z-index-2\">\r\n      <div class=\"card-header p-0 position-relative mt-n4 mx-3 bg-transparent\">\r\n        <div\r\n          class=\"cardmain4 bg-gradient-primary active shadow-primary border-radius-lg py-3 pe-1 text-center align-items-center\"\r\n          height=\"170\"\r\n        >\r\n          <h5 class=\"card-title text-center\">AIS MAPPING</h5>\r\n        </div>\r\n\r\n      \r\n      \r\n        <!-- Leaflet Map Container -->\r\n        <div id=\"map\" style=\"width: 100%; height: 500px\"></div>\r\n\r\n        <!-- Map container -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  password: string = '';\r\n  errorMessage: string = '';\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  login() {\r\n    const credentials = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n    this.authService.login(credentials).subscribe(\r\n      (response) => {\r\n        // Simpan token dan nama pengguna setelah login berhasil\r\n        const userName = response.userName; // Asumsikan server mengirim nama pengguna\r\n        const token = response.token; // Asumsikan server mengirim token\r\n\r\n        localStorage.setItem('token', token); // Simpan token ke localStorage\r\n        this.authService.saveUserName(userName); // Simpan nama pengguna ke localStorage\r\n        console.log('Login response:', response); // Tambahkan ini untuk melihat respons\r\n\r\n        this.router.navigate(['/dashboard']); // Arahkan pengguna ke halaman dashboard\r\n      },\r\n      (error) => {\r\n        this.errorMessage = 'Login failed! Please try again.';\r\n        console.error('Login failed', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container position-sticky z-index-sticky top-0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n    </div>\r\n  </div>\r\n</div>\r\n<main class=\"main-content mt-0\">\r\n  <div class=\"page-header align-items-start min-vh-100\"\r\n    style=\"background-image: url('https://images.unsplash.com/photo-1497294815431-9365093b7331?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1950&q=80');\">\r\n    <span class=\"mask bg-gradient-dark opacity-6\"></span>\r\n    <div class=\"container my-auto\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-8 col-12 mx-auto\">\r\n          <div class=\"card z-index-0 fadeIn3 fadeInBottom\">\r\n            <div class=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\r\n              <div class=\"bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1\">\r\n                <h4 class=\"text-white font-weight-bolder text-center mt-2 mb-0\">Login AIS Monitoring</h4>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form role=\"form\" class=\"text-start\" (ngSubmit)=\"login()\">\r\n                <div class=\"input-group input-group-outline my-3\">\r\n                  <label class=\"form-label\">Email</label>\r\n                  <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" required>\r\n                </div>\r\n                <div class=\"input-group input-group-outline mb-3\">\r\n                  <label class=\"form-label\">Password</label>\r\n                  <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\" required>\r\n                </div>\r\n                <div class=\"form-check form-switch d-flex align-items-center mb-3\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"rememberMe\" checked>\r\n                  <label class=\"form-check-label mb-0 ms-3\" for=\"rememberMe\">Remember me</label>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <button type=\"submit\" class=\"btn bg-gradient-primary w-100 my-4 mb-2\">Sign in</button>\r\n                </div>\r\n                <p class=\"mt-4 text-sm text-center\">\r\n                  Don't have an account?\r\n                  <a [routerLink]=\"['/register']\" class=\"text-primary text-gradient font-weight-bold\">Sign up</a>\r\n                </p>\r\n                <div *ngIf=\"errorMessage\" class=\"text-danger text-center\">\r\n                  {{ errorMessage }}\r\n                </div>\r\n                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import { Injectable } from '@angular/core';\r\nimport { CircleZoneService } from '../services/circle-zone.service';\r\nimport * as turf from '@turf/turf';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CircleZoneHandler {\r\n\r\n  constructor(private circleZoneService: CircleZoneService) {}\r\n\r\n  // Metode untuk memuat zona lingkaran dari layanan CircleZoneService\r\n  loadCircleZones(): Observable<any[]> {\r\n    return this.circleZoneService.getCircleZones().pipe(\r\n      // Memproses data yang diterima dari layanan\r\n      map(data => data.map(zone => {\r\n        // Periksa apakah koordinat dan radius ada dan valid\r\n        if (!zone.coordinates || typeof zone.coordinates.radius !== 'number') return null;\r\n        if (typeof zone.coordinates.lat !== 'number' || typeof zone.coordinates.lng !== 'number') return null;\r\n\r\n        // Kembalikan zona dengan struktur yang diubah\r\n        return {\r\n          ...zone,\r\n          center: { lat: zone.coordinates.lat, lng: zone.coordinates.lng }, // Set pusat lingkaran\r\n          radius: zone.coordinates.radius // Set radius lingkaran\r\n        };\r\n      }).filter(zone => zone !== null)) // Hapus zona yang tidak valid\r\n    );\r\n  }\r\n\r\n  // Metode untuk memeriksa apakah kapal berada dalam zona lingkaran\r\n  isShipInZone(ship: any, zone: any): boolean {\r\n    // Hitung jarak antara kapal dan pusat lingkaran menggunakan turf.js\r\n    const distance = turf.distance([ship.lon, ship.lat], [zone.center.lng, zone.center.lat], { units: 'meters' });\r\n    return distance <= zone.radius; // Periksa apakah jarak kurang dari atau sama dengan radius lingkaran\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { PolygonZoneHandler } from './polygon-zone-handler';\nimport { CircleZoneHandler } from './circle-zone-handler';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html'\n})\nexport class MainComponent implements OnInit {\n  polygonZones: any[] = [];\n  circleZones: any[] = [];\n  ships: any[] = [];\n  polygonShipCounts: { [key: string]: number } = {};\n  circleShipCounts: { [key: string]: number } = {};\n  currentSelectedPolygonZone: any = null;\n  currentSelectedCircleZone: any = null;\n\n  constructor(\n    private polygonZoneHandler: PolygonZoneHandler,\n    private circleZoneHandler: CircleZoneHandler,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {\n    this.loadPolygonZones();\n    this.loadCircleZones();\n    this.loadShips();\n  }\n\n  // Memuat zona poligon menggunakan PolygonZoneHandler\n  loadPolygonZones() {\n    this.polygonZoneHandler.loadPolygonZones().subscribe(data => {\n      this.polygonZones = data;\n    });\n  }\n\n  // Memuat zona lingkaran menggunakan CircleZoneHandler\n  loadCircleZones() {\n    this.circleZoneHandler.loadCircleZones().subscribe(data => {\n      this.circleZones = data;\n    });\n  }\n\n  // Memuat data kapal dari DataService\n  loadShips() {\n    this.dataService.getShipsData().subscribe(data => {\n      this.ships = data;\n      this.updateAllZoneCounts(); // Memperbarui jumlah kapal di semua zona setelah memuat data kapal\n    }, error => console.error('Failed to load ships:', error));\n  }\n\n  // Menangani pemilihan zona poligon\n  onPolygonZoneSelected(zone: any) {\n    this.currentSelectedPolygonZone = zone;\n    this.updateShipCountInZone(zone, 'polygon');\n  }\n\n  // Menangani pemilihan zona lingkaran\n  onCircleZoneSelected(zone: any) {\n    this.currentSelectedCircleZone = zone;\n    this.updateShipCountInZone(zone, 'circle');\n  }\n\n  // Memperbarui jumlah kapal di semua zona\n  updateAllZoneCounts() {\n    this.polygonZones.forEach(zone => {\n      this.polygonShipCounts[zone._id] = this.ships.filter(ship => this.polygonZoneHandler.isShipInZone(ship, zone)).length;\n    });\n    this.circleZones.forEach(zone => {\n      this.circleShipCounts[zone._id] = this.ships.filter(ship => this.circleZoneHandler.isShipInZone(ship, zone)).length;\n    });\n  }\n\n  // Memperbarui jumlah kapal di zona yang dipilih\n  updateShipCountInZone(zone: any, type: string) {\n    if (!zone || !this.ships.length) return;\n    const count = this.ships.filter(ship => this.isShipInZone(ship, zone, type)).length;\n    if (type === 'polygon') {\n      this.polygonShipCounts[zone._id] = count;\n    } else if (type === 'circle') {\n      this.circleShipCounts[zone._id] = count;\n    }\n  }\n\n  // Memeriksa apakah kapal berada dalam zona tertentu (poligon atau lingkaran)\n  isShipInZone(ship: any, zone: any, type: string): boolean {\n    if (type === 'circle') {\n      return this.circleZoneHandler.isShipInZone(ship, zone);\n    } else if (type === 'polygon') {\n      return this.polygonZoneHandler.isShipInZone(ship, zone);\n    }\n    return false;\n  }\n}\n","<div class=\"row mt-4\">\n  <!-- Polygon Zone -->\n  <div class=\"col-lg-6 col-md-6 mt-4 mb-4\">\n    <div class=\"card z-index-2\">\n      <div class=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent\">\n        <div class=\"cardmain active bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1 text-center align-items-center\" style=\"height: 200px;\">\n          <i class=\"fas fa-draw-polygon fs-1\" style=\"color: white;\"></i>\n          <h1 class=\"mb-0 fs-3\" style=\"color: white;\">Polygon Zone</h1>\n          <h4 class=\"text-white mb-0 fs-5\">\n            Ships in zone: {{ polygonShipCounts[currentSelectedPolygonZone?._id] || 0 }}\n          </h4>\n          <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n            <mat-label style=\"color: black;\">Select a polygon zone</mat-label>\n            <mat-select (selectionChange)=\"onPolygonZoneSelected($event.value)\">\n              <mat-option *ngFor=\"let zone of polygonZones\" [value]=\"zone\">{{ zone.properties?.name }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Circle Zone -->\n  <div class=\"col-lg-6 col-md-6 mt-4 mb-4\">\n    <div class=\"card z-index-2\">\n      <div class=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2 bg-transparent\">\n        <div class=\"cardmain2 active bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1 text-center align-items-center\" style=\"height: 200px; \">\n          <i class=\"fas fa-circle-notch fs-1\" style=\"color: white;\"></i>\n          <h1 class=\"mb-0 fs-3\" style=\"color: white;\">Circle Zone</h1>\n          <h4 class=\"text-white mb-0 fs-5\" style=\"color: black;\">\n            Ships in zone: {{ circleShipCounts[currentSelectedCircleZone?._id] || 0 }}\n          </h4>\n          <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\n            <mat-label style=\"color: black;\">Select a circle zone</mat-label>\n            <mat-select (selectionChange)=\"onCircleZoneSelected($event.value)\">\n              <mat-option *ngFor=\"let zone of circleZones\" [value]=\"zone\">{{ zone.properties?.name }}</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Leaflet Map Component -->\n  <app-leaflet-map></app-leaflet-map>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { PolygonZoneService } from '../services/polygon-zone.service';\r\nimport * as turf from '@turf/turf';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ninterface Coordinate {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PolygonZoneHandler {\r\n\r\n  constructor(private polygonZoneService: PolygonZoneService) {}\r\n\r\n  loadPolygonZones(): Observable<any[]> {\r\n    return this.polygonZoneService.getPolygonZones().pipe(\r\n      map(data => data.map(zone => {\r\n        if (!zone.coordinates || zone.coordinates.length === 0) return null;\r\n        let coordinates = zone.coordinates[0].map((coord: Coordinate) => {\r\n          if (coord && typeof coord.lat === 'number' && typeof coord.lng === 'number') {\r\n            return [coord.lng, coord.lat];\r\n          }\r\n          return null;\r\n        }).filter((coord: Coordinate) => coord !== null);\r\n\r\n        if (coordinates.length >= 3 && coordinates[0] !== coordinates[coordinates.length - 1]) {\r\n          coordinates.push(coordinates[0]);\r\n        }\r\n        if (coordinates.length < 4) return null;\r\n        return { ...zone, coordinates: [coordinates] };\r\n      }).filter(zone => zone !== null))\r\n    );\r\n  }\r\n\r\n  isShipInZone(ship: any, zone: any): boolean {\r\n    try {\r\n      const point = turf.point([ship.lon, ship.lat]);\r\n      const polygon = turf.polygon(zone.coordinates);\r\n      return turf.booleanPointInPolygon(point, polygon);\r\n    } catch (error) {\r\n      console.error('Failed to create polygon or check ship in zone', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-mainlayout',\n  templateUrl: './mainlayout.component.html',\n  styleUrls: ['./mainlayout.component.css']\n})\nexport class MainlayoutComponent {\n\n}\n","<aside class=\"sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 bg-gradient-dark\" id=\"sidenav-main\">\n  <app-sidebar></app-sidebar>\n</aside>\n\n<main class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg\">\n  <app-navbar></app-navbar>\n  <router-outlet></router-outlet>\n  <div>\n    <app-footer></app-footer>\n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationService,Notification } from '../services/notification.service';\r\nimport { AppService } from '../app.service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  notifications: Notification[] = [];\r\n\r\nconstructor(private notificationService: NotificationService,private appService: AppService ,private authService: AuthService, private router: Router) {}\r\nuserName: string = ''; // Nama pengguna untuk ditampilkan\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.notificationService.notifications$.subscribe((notifications: Notification[]) => {\r\n      this.notifications = notifications;\r\n    });\r\n    this.userName = this.authService.getUserName();\r\n  }\r\n  callToggleSidenav() {\r\n    // Panggil fungsi toggleSidenav dengan id \"sidenav-main\"\r\n   return this.appService.callToggleSidenav();\r\n  }\r\n  get isPluginVisible(): boolean {\r\n    return this.appService.getIsPluginVisible();\r\n  }\r\n\r\n\r\n  togglePluginVisibility() {\r\n    this.appService.togglePluginVisibility();\r\n  }\r\n\r\n  closeFixedPlugin() {\r\n    this.appService.closeFixedPlugin();\r\n  }\r\n}\r\n","<nav\r\n  class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\r\n  id=\"navbarBlur\"\r\n  data-scroll=\"true\"\r\n>\r\n  <div class=\"container-fluid py-1 px-3\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\r\n        <li class=\"breadcrumb-item text-sm\">\r\n          <a class=\"opacity-5 text-dark\" href=\"javascript:;\">Pages</a>\r\n        </li>\r\n        <li\r\n          class=\"breadcrumb-item text-sm text-dark active\"\r\n          aria-current=\"page\"\r\n        >\r\n          Dashboard\r\n        </li>\r\n      </ol>\r\n      <h6 class=\"font-weight-bolder mb-0\">Dashboard</h6>\r\n    </nav>\r\n    <div\r\n      class=\"collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4\"\r\n      id=\"navbar\"\r\n    >\r\n      <ul class=\"navbar-nav ms-auto\">\r\n        <!-- Halo, [nama pengguna] -->\r\n        <li class=\"nav-item px-3 d-flex align-items-center\">\r\n          <span class=\"nav-link text-body p-0\">Halo, {{ userName }}</span>\r\n        </li>\r\n\r\n        <!-- Tombol Logout -->\r\n        <li class=\"nav-item px-3 d-flex align-items-center\">\r\n          <a href=\"javascript:;\" class=\"nav-link text-body p-0\" (click)=\"logout()\">\r\n            <i class=\"fa fa-sign-out cursor-pointer\"></i> Logout\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item px-3 d-flex align-items-center\">\r\n          <a\r\n            href=\"javascript:;\"\r\n            class=\"nav-link text-body p-0\"\r\n            (click)=\"togglePluginVisibility()\"\r\n          >\r\n            <i class=\"fa fa-cog fixed-plugin-button-nav cursor-pointer\"></i>\r\n          </a>\r\n        </li>\r\n        <div class=\"fixed-plugin\" [class.show]=\"isPluginVisible\">\r\n          <a\r\n            class=\"fixed-plugin-button text-dark position-fixed px-3 py-2\"\r\n            (click)=\"togglePluginVisibility()\"\r\n          >\r\n            <i class=\"material-icons py-2\">settings</i>\r\n          </a>\r\n          <div class=\"card shadow-lg\">\r\n            <div class=\"card-header pb-0 pt-3\">\r\n              <div class=\"float-start\">\r\n                <h5 class=\"mt-3 mb-0\">Material UI Configurator</h5>\r\n                <p>See our dashboard options.</p>\r\n              </div>\r\n              <div class=\"float-end mt-4\">\r\n                <button\r\n                  class=\"btn btn-link text-dark p-0 fixed-plugin-close-button\"\r\n                  (click)=\"closeFixedPlugin()\"\r\n                >\r\n                  <i class=\"material-icons\">clear</i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <app-uiconfigurator></app-uiconfigurator>\r\n          </div>\r\n        </div>\r\n\r\n        <li class=\"nav-item dropdown pe-2 d-flex align-items-center\">\r\n          <a\r\n            href=\"javascript:;\"\r\n            class=\"nav-link text-body p-0\"\r\n            id=\"dropdownMenuButton\"\r\n            data-bs-toggle=\"dropdown\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            <i class=\"fa fa-bell cursor-pointer\"></i>\r\n            <span class=\"badge badge-pill bg-danger\">{{ notifications.length }}</span>\r\n          </a>\r\n          <ul\r\n            class=\"dropdown-menu dropdown-menu-end px-2 py-3 me-sm-n4\"\r\n            aria-labelledby=\"dropdownMenuButton\"\r\n          >\r\n            <li *ngFor=\"let notification of notifications\">\r\n              <a class=\"dropdown-item\">\r\n                <strong>{{ notification.timestamp }}</strong>: {{ notification.message }}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"nav-item d-xl-none ps-3 d-flex align-items-center\">\r\n          <a\r\n            href=\"javascript:;\"\r\n            id=\"iconNavbarSidenav\"\r\n            (click)=\"callToggleSidenav()\"\r\n            class=\"nav-link text-body p-0\"\r\n          >\r\n            <div class=\"sidenav-toggler-inner\">\r\n              <i class=\"sidenav-toggler-line\"></i>\r\n              <i class=\"sidenav-toggler-line\"></i>\r\n              <i class=\"sidenav-toggler-line\"></i>\r\n            </div>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-newfitur',\n  templateUrl: './newfitur.component.html',\n  styleUrls: ['./newfitur.component.css']\n})\nexport class NewfiturComponent {\n\n}\n","<app-main></app-main>\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService, Notification } from '../services/notification.service';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n  notifications: Notification[] = [];\n\n  constructor(private notificationService: NotificationService) {}\n\n  ngOnInit() {\n    this.notificationService.notifications$.subscribe((notifications: Notification[]) => {\n      this.notifications = notifications;\n    });\n  }\n\n  deleteNotification(notification: Notification) {\n    this.notificationService.deleteNotification(notification);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h2 style=\"color: #fff;\">Notifications</h2>\n      <ul class=\"notification-list\">\n        <li *ngFor=\"let notification of notifications\" class=\"notification-item\">\n          <div class=\"notification-content\">\n            <strong>{{ notification.timestamp | date:'short' }}:</strong> {{ notification.message }}\n          </div>\n          <button mat-icon-button matTooltip=\"Delete\" (click)=\"deleteNotification(notification)\" class=\"delete-button\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  username: string = '';\r\n  email: string = '';\r\n  role: string = 'user'; // Default role\r\n  password: string = '';\r\n  successMessage: string = '';\r\n  errorMessage: string = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  register() {\r\n    const userData = {\r\n      username: this.username,\r\n      email: this.email,\r\n      role: this.role,\r\n      password: this.password\r\n    };\r\n    console.log(\"Data yang dikirim:\", JSON.stringify(userData)); // Debugging data\r\n\r\n    this.authService.register(userData).subscribe(\r\n      response => {\r\n        console.log('Registration successful', response);\r\n        this.successMessage = 'Registration successful!';\r\n        this.errorMessage = ''; // Clear error message if any\r\n        // Tambahkan logika setelah pendaftaran berhasil, seperti navigasi ke halaman lain\r\n      },\r\n      error => {\r\n        this.errorMessage = 'Registration failed! Please try again.';\r\n        this.successMessage = ''; // Clear success message if any\r\n        console.error('Registration failed', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container position-sticky z-index-sticky top-0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\"></div>\r\n  </div>\r\n</div>\r\n<main class=\"main-content mt-0\">\r\n  <div class=\"page-header align-items-start min-vh-100\"\r\n    style=\"background-image: url('https://images.unsplash.com/photo-1497294815431-9365093b7331?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1950&q=80');\">\r\n    <span class=\"mask bg-gradient-dark opacity-6\"></span>\r\n    <div class=\"container my-auto\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-8 col-12 mx-auto\">\r\n          <div class=\"card z-index-0 fadeIn3 fadeInBottom\">\r\n            <div class=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\r\n              <div class=\"bg-gradient-primary shadow-primary border-radius-lg py-3 pe-1\">\r\n                <h4 class=\"text-white font-weight-bolder text-center mt-2 mb-0\">Register AIS Monitoring</h4>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form role=\"form\" class=\"text-start\" (ngSubmit)=\"register()\">\r\n                <div class=\"input-group input-group-outline my-3\">\r\n                  <label class=\"form-label\">Name</label>\r\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" required>\r\n                </div>\r\n                <div class=\"input-group input-group-outline my-3\">\r\n                  <label class=\"form-label\">Email</label>\r\n                  <input type=\"email\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" required>\r\n                </div>\r\n                <!-- <div class=\"input-group input-group-outline my-3\">\r\n                  <label class=\"form-label\">Role</label>\r\n                  <select class=\"form-control\" [(ngModel)]=\"role\" name=\"role\" required>\r\n                \r\n                  </select>\r\n                </div> -->\r\n                <div class=\"input-group input-group-outline mb-3\">\r\n                  <label class=\"form-label\">Password</label>\r\n                  <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\" required>\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <button type=\"submit\" class=\"btn bg-gradient-primary w-100 my-4 mb-2\">Sign up</button>\r\n                </div>\r\n                <p class=\"mt-4 text-sm text-center\">\r\n                  Already have an account?\r\n                  <a routerLink=\"/login\" class=\"text-primary text-gradient font-weight-bold\">Sign in</a>\r\n                </p>\r\n                <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\r\n                  {{ successMessage }}\r\n                </div>\r\n                <div *ngIf=\"errorMessage\" class=\"alert alert-danger\" role=\"alert\">\r\n                  {{ errorMessage }}\r\n                </div>\r\n                \r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</main>\r\n","import * as L from 'leaflet';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport class CoordinateControlService {\r\n  private coordinateControl: L.Control | undefined;\r\n  private trackCursor: boolean = false; // Flag to toggle between center and cursor tracking\r\n  private lockedMarker: L.Marker | undefined;\r\n\r\n  // Method to add the coordinate control to the map\r\n  addCoordinateControl(map: L.Map): void {\r\n    const coordinateCardTemplate = `\r\n      <div class=\"coordinate-card\">\r\n        <div class=\"coordinate-card-header\">Map Coordinates</div>\r\n        <div class=\"coordinate-card-body\">\r\n          <div class=\"toggle-slider-container\">\r\n            <label class=\"switch\">\r\n              <input type=\"checkbox\" id=\"coordinate-toggle\">\r\n              <span class=\"slider\"></span>\r\n            </label>\r\n            <span class=\"toggle-label\" id=\"toggle-label\">Center</span>\r\n          </div>\r\n          <div id=\"coordinate-info\">\r\n            <div><strong>Decimal Coordinates:</strong></div>\r\n            <div>Lat: <span id=\"lat-decimal\">0.00000</span>, Lng: <span id=\"lng-decimal\">0.00000</span></div>\r\n            <div><strong>DMS Coordinates:</strong></div>\r\n            <div>Lat: <span id=\"lat-dms\">0° 0' 0\" N</span>, Lng: <span id=\"lng-dms\">0° 0' 0\" E</span></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    const CoordinateControl = L.Control.extend({\r\n      onAdd: () => {\r\n        const div = L.DomUtil.create('div', 'leaflet-coordinate-display');\r\n        div.innerHTML = coordinateCardTemplate;\r\n        this.applyInlineStyles(div);\r\n        this.setupSliderToggle(div, map);\r\n        return div;\r\n      }\r\n    });\r\n\r\n    this.coordinateControl = new CoordinateControl({ position: 'bottomleft' });\r\n\r\n    if (this.coordinateControl) {\r\n      this.coordinateControl.addTo(map);\r\n      map.on('move', () => this.updateCoordinates(map));\r\n      map.on('mousemove', (event: L.LeafletMouseEvent) => {\r\n        if (this.trackCursor) {\r\n          this.updateCoordinates(map, event.latlng);\r\n        }\r\n      });\r\n      map.on('dblclick', (event: L.LeafletMouseEvent) => this.lockCoordinates(map, event.latlng));\r\n    }\r\n  }\r\n\r\n  // Method to lock coordinates on double-click and display a marker with a SweetAlert popup\r\n  private lockCoordinates(map: L.Map, latlng: L.LatLng): void {\r\n    // Remove the previous marker if it exists\r\n    if (this.lockedMarker) {\r\n      map.removeLayer(this.lockedMarker);\r\n    }\r\n\r\n    // Add a marker at the clicked position\r\n    this.lockedMarker = L.marker(latlng).addTo(map);\r\n\r\n    // Show a SweetAlert popup with the coordinates\r\n    Swal.fire({\r\n      title: 'Coordinates Locked',\r\n      html: `\r\n        <div><strong>Decimal Coordinates:</strong></div>\r\n        <div>Lat: ${latlng.lat.toFixed(5)}, Lng: ${latlng.lng.toFixed(5)}</div>\r\n        <div><strong>DMS Coordinates:</strong></div>\r\n        <div>Lat: ${this.convertToDMS(latlng.lat)}, Lng: ${this.convertToDMS(latlng.lng)}</div>\r\n      `,\r\n      confirmButtonText: 'OK'\r\n    });\r\n\r\n    // Update the coordinate display with the locked location\r\n    this.updateCoordinates(map, latlng);\r\n  }\r\n\r\n  // Method to set up the slider toggle for center/cursor coordinate tracking\r\n  private setupSliderToggle(div: HTMLElement, map: L.Map): void {\r\n    const toggleInput = div.querySelector('#coordinate-toggle') as HTMLInputElement;\r\n    const toggleLabel = div.querySelector('#toggle-label') as HTMLElement;\r\n\r\n    toggleInput.addEventListener('change', () => {\r\n      this.trackCursor = toggleInput.checked;\r\n      toggleLabel.innerText = this.trackCursor ? 'Cursor' : 'Center';\r\n\r\n      // Remove marker if center mode is active\r\n      if (!this.trackCursor && this.lockedMarker) {\r\n        map.removeLayer(this.lockedMarker);\r\n        this.lockedMarker = undefined;\r\n      }\r\n\r\n      this.updateCoordinates(map); // Update coordinates to show the correct mode immediately\r\n    });\r\n  }\r\n\r\n  // Method to update the coordinates on the control based on either map center or cursor position\r\n  private updateCoordinates(map: L.Map, cursorLatLng?: L.LatLng): void {\r\n    const latDecimalElement = document.getElementById('lat-decimal');\r\n    const lngDecimalElement = document.getElementById('lng-decimal');\r\n    const latDMSElement = document.getElementById('lat-dms');\r\n    const lngDMSElement = document.getElementById('lng-dms');\r\n\r\n    const latLng = cursorLatLng || map.getCenter(); // Use cursor position if tracking, otherwise map center\r\n\r\n    if (latDecimalElement && lngDecimalElement && latDMSElement && lngDMSElement) {\r\n      latDecimalElement.innerText = latLng.lat.toFixed(5);\r\n      lngDecimalElement.innerText = latLng.lng.toFixed(5);\r\n      latDMSElement.innerText = this.convertToDMS(latLng.lat);\r\n      lngDMSElement.innerText = this.convertToDMS(latLng.lng);\r\n    }\r\n  }\r\n\r\n  // Function to convert decimal coordinates to DMS (Degrees, Minutes, Seconds) format\r\n  private convertToDMS(coordinate: number): string {\r\n    const absolute = Math.abs(coordinate);\r\n    const degrees = Math.floor(absolute);\r\n    const minutesNotTruncated = (absolute - degrees) * 60;\r\n    const minutes = Math.floor(minutesNotTruncated);\r\n    const seconds = Math.floor((minutesNotTruncated - minutes) * 60);\r\n\r\n    const direction = coordinate >= 0 ? (coordinate === absolute ? 'N' : 'E') : (coordinate === absolute ? 'S' : 'W');\r\n\r\n    return `${degrees}° ${minutes}' ${seconds}\" ${direction}`;\r\n  }\r\n\r\n  // Apply inline styles to the coordinate card and the slider toggle\r\n  private applyInlineStyles(div: HTMLElement): void {\r\n    div.style.backgroundColor = 'rgba(161, 154, 154, 0)'; // Semi-transparent background\r\n    div.style.color = '#000'; // Black text for readability\r\n    div.style.borderRadius = '8px';\r\n    div.style.boxShadow = '0 3px 6px rgba(0, 0, 0, 0.3)';\r\n    div.style.width = '250px';\r\n    div.style.overflow = 'hidden';\r\n    div.style.margin = '5px';\r\n    div.style.position = 'absolute';\r\n    div.style.bottom = '15px';\r\n    div.style.left = '15px';\r\n\r\n    const header = div.querySelector('.coordinate-card-header') as HTMLElement;\r\n    if (header) {\r\n      header.style.backgroundColor = 'rgba(161, 154, 154, 0)';\r\n      header.style.color = 'black';\r\n      header.style.padding = '8px';\r\n      header.style.fontWeight = 'bold';\r\n      header.style.textAlign = 'center';\r\n    }\r\n\r\n    const body = div.querySelector('.coordinate-card-body') as HTMLElement;\r\n    const coordinateLines = body.querySelectorAll('div');\r\n    coordinateLines.forEach((line: HTMLElement) => {\r\n      line.style.marginBottom = '4px'; // Add spacing between lines for clearer layout\r\n    });\r\n\r\n    // Style for the slider toggle\r\n    const sliderStyle = document.createElement('style');\r\n    sliderStyle.innerHTML = `\r\n      .switch {\r\n        position: relative;\r\n        display: inline-block;\r\n        width: 50px;\r\n        height: 24px;\r\n      }\r\n      .switch input {\r\n        opacity: 0;\r\n        width: 0;\r\n        height: 0;\r\n      }\r\n      .slider {\r\n        position: absolute;\r\n        cursor: pointer;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-color: #ccc;\r\n        transition: .4s;\r\n        border-radius: 34px;\r\n      }\r\n      .slider:before {\r\n        position: absolute;\r\n        content: \"\";\r\n        height: 18px;\r\n        width: 18px;\r\n        left: 4px;\r\n        bottom: 3px;\r\n        background-color: white;\r\n        transition: .4s;\r\n        border-radius: 50%;\r\n      }\r\n      input:checked + .slider {\r\n        background-color: #007bff;\r\n      }\r\n      input:checked + .slider:before {\r\n        transform: translateX(26px);\r\n      }\r\n      .toggle-label {\r\n        margin-left: 10px;\r\n        font-size: 14px;\r\n        color: #000;\r\n      }\r\n    `;\r\n    document.head.appendChild(sliderStyle);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private apiUrl = 'http://165.154.208.232:3000/api'; // Sesuaikan dengan URL backend Anda\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  register(userData: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/register`, userData);\r\n  }\r\n\r\n  login(credentials: any): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/login`, credentials);\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!localStorage.getItem('token'); // Mengembalikan true jika token ada di localStorage\r\n  }\r\n\r\n  getUserName(): string {\r\n    return localStorage.getItem('userName') || '';\r\n  }\r\n  saveUserName(userName: string): void {\r\n    localStorage.setItem('userName', userName);\r\n  }\r\n}\r\n","import * as L from 'leaflet';\r\n\r\nexport class BaseLayerService {\r\n  static baseLayers = {\r\n    'OpenStreetMap': L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 19,\r\n      attribution: '&copy; OpenStreetMap contributors'\r\n    }),\r\n    'Esri World Street Map': L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {\r\n      maxZoom: 20,\r\n      attribution: '... Esri &mdash; Esri, DeLorme, NAVTEQ'\r\n    }),\r\n    'Ocean': L.tileLayer('https://api.maptiler.com/maps/ocean/{z}/{x}/{y}.png?key=TLRSpsp0lyuC33gmLrBu', {\r\n      maxZoom: 20,\r\n      attribution: '&copy; MapTiler'\r\n    }),\r\n    'Satelite': L.tileLayer('https://api.maptiler.com/maps/satellite/256/{z}/{x}/{y}@2x.jpg?key=GDfjtnu7IHfNAGwlcHjN', {\r\n      maxZoom: 20,\r\n      attribution: '&copy; MapTiler'\r\n    }),\r\n  };\r\n};\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CircleZoneService } from '../services/circle-zone.service';\r\nimport * as turf from '@turf/turf';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CircleZoneHandler {\r\n\r\n  constructor(private circleZoneService: CircleZoneService) {}\r\n\r\n  // Metode untuk memuat zona lingkaran dari layanan CircleZoneService\r\n  loadCircleZones(): Observable<any[]> {\r\n    return this.circleZoneService.getCircleZones().pipe(\r\n      // Memproses data yang diterima dari layanan\r\n      map(data => data.map(zone => {\r\n        // Periksa apakah koordinat dan radius ada dan valid\r\n        if (!zone.coordinates || typeof zone.coordinates.radius !== 'number') return null;\r\n        if (typeof zone.coordinates.lat !== 'number' || typeof zone.coordinates.lng !== 'number') return null;\r\n\r\n        // Kembalikan zona dengan struktur yang diubah\r\n        return {\r\n          ...zone,\r\n          center: { lat: zone.coordinates.lat, lng: zone.coordinates.lng }, // Set pusat lingkaran\r\n          radius: zone.coordinates.radius // Set radius lingkaran\r\n        };\r\n      }).filter(zone => zone !== null)) // Hapus zona yang tidak valid\r\n    );\r\n  }\r\n\r\n  // Metode untuk memeriksa apakah kapal berada dalam zona lingkaran\r\n  isShipInZone(ship: any, zone: any): boolean {\r\n    // Hitung jarak antara kapal dan pusat lingkaran menggunakan turf.js\r\n    const distance = turf.distance([ship.lon, ship.lat], [zone.center.lng, zone.center.lat], { units: 'meters' });\r\n    return distance <= zone.radius; // Periksa apakah jarak kurang dari atau sama dengan radius lingkaran\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CircleZoneService {\r\n  private apiUrl = 'http://165.154.208.232:3000/api/shapes/circle'; // Update this URL as per your API endpoint\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCircleZones(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.apiUrl);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as L from 'leaflet';\r\n// import { MapUtilities } from './map-utilities';\r\nimport { ShapeDataHandlerService } from './shape-data-handler.service';\r\nimport { ShapeService } from './shapeService';\r\n\r\n// Define what properties a shape should have\r\ninterface Shape {\r\n  type: string;\r\n  coordinates: any; // Should be defined more specifically based on your data\r\n  properties: {\r\n    color: string;\r\n  };\r\n  _id: string; // Assuming _id is used as the identifier from MongoDB or similar\r\n}\r\n\r\n// Extend the Leaflet Layer to include custom properties like shapeId\r\ninterface CustomLayer extends L.Layer {\r\n  shapeId?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DrawControlService {\r\n  constructor(\r\n    private shapeDataHandler: ShapeDataHandlerService,\r\n    private shapeService: ShapeService\r\n  ) {}\r\n  static createDrawControl(drawnItems: L.FeatureGroup): L.Control.Draw {\r\n    return new L.Control.Draw({\r\n      edit: {\r\n        featureGroup: drawnItems\r\n      },\r\n      draw: {\r\n        circle: {\r\n          shapeOptions: {\r\n            color: '#0000FF'\r\n          }\r\n        },\r\n        polygon: {},\r\n        rectangle: false,\r\n        polyline: false,\r\n        marker: false,\r\n        circlemarker: false\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDrawEvents(map: L.Map, drawnItems: L.FeatureGroup): void {\r\n    map.on(L.Draw.Event.CREATED, (event: any) => {\r\n      const layer = event.layer;\r\n      drawnItems.addLayer(layer);\r\n      this.shapeDataHandler.promptForLayerData(layer);\r\n      // MapUtilities.saveDrawnItems(drawnItems);\r\n    });\r\n\r\n    map.on(L.Draw.Event.DELETED, (event: any) => {\r\n      const layers = event.layers;\r\n      layers.eachLayer((layer: any) => {\r\n        if (layer.shapeId) {\r\n          this.shapeService.deleteShape(layer.shapeId).subscribe({\r\n            next: (res) => console.log('Shape deleted from server', res),\r\n            error: (err) => {\r\n              console.error('Error deleting shape', err);\r\n              alert('Failed to delete shape: ' + err.message); // Display or handle error more visibly\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n  loadShapes(map: L.Map, drawnItems: L.FeatureGroup): void {\r\n    this.shapeService.getShapes().subscribe(\r\n      (shapes: any[]) => {\r\n        shapes.forEach((shape) => {\r\n          let layer: CustomLayer | undefined;\r\n\r\n          if (shape.type === 'circle') {\r\n            layer = L.circle([shape.coordinates.lat, shape.coordinates.lng], {\r\n              radius: shape.coordinates.radius,\r\n              color: shape.properties.color\r\n            }) as CustomLayer;\r\n          } else if (shape.type === 'polygon') {\r\n            layer = L.polygon(shape.coordinates, {\r\n              color: shape.properties.color\r\n            }) as CustomLayer;\r\n          }\r\n\r\n          if (layer) {\r\n            layer.addTo(drawnItems);\r\n            this.bindPopupToLayer(layer, shape.properties.mmsi,shape.properties.name, shape.properties.status, shape.properties.description, shape.coordinates);\r\n            layer.shapeId = shape._id; // Ensure shapeId is set here if not done yet\r\n          }\r\n        });\r\n      },\r\n      error => console.error('Error loading shapes:', error)\r\n    );\r\n }\r\n  private bindPopupToLayer(layer: any,mmsi:number, name: string, status: string, description: string, coordinates: any): void {\r\n    let content = `<div><strong>Name:</strong> ${name}</div>\r\n                   <div><strong>Status:</strong> ${status}</div>\r\n                   <div><strong>Description:</strong> ${description}</div>`;\r\n\r\n    if (layer instanceof L.Circle) {\r\n      content += `<div><strong>Coordinates:</strong> ${coordinates.lat}, ${coordinates.lng}</div>`;\r\n    } else if (layer instanceof L.Polygon) {\r\n      content += `<div><strong>Coordinates:</strong><ul>`;\r\n      (coordinates as L.LatLng[][]).forEach(latlngs => {\r\n        latlngs.forEach(latlng => {\r\n          content += `<li>${latlng.lat}, ${latlng.lng}</li>`;\r\n        });\r\n      });\r\n      content += `</ul></div>`;\r\n    }\r\n\r\n    layer.bindPopup(content).openPopup();\r\n  }\r\n}\r\n","// heatmap.service.ts\r\nimport * as L from 'leaflet';\r\nimport { Injectable } from '@angular/core';\r\nimport { ShipData } from './map.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HeatmapService {\r\n  private heatmapLayer?: L.Layer;\r\n\r\n  constructor() {}\r\n\r\n  addHeatMap(map: L.Map, data: ShipData[]): void {\r\n    if (this.heatmapLayer) {\r\n      map.removeLayer(this.heatmapLayer);\r\n    }\r\n    const heatData: L.HeatLatLngTuple[] = data.map((ship) => [ship.lat, ship.lon, 1.0]);\r\n    this.heatmapLayer = L.heatLayer(heatData, { radius: 35, blur: 15, maxZoom: 17 }).addTo(map);\r\n  }\r\n}\r\n","import * as L from 'leaflet';\r\n\r\nexport class IconService {\r\n  private static shipIcons: { [type: string]: L.Icon } = {\r\n    'Unspecified': L.icon({\r\n      iconUrl: 'assets/images/unspecified.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Fishing': L.icon({\r\n      iconUrl: 'assets/images/fishing.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Tanker': L.icon({\r\n      iconUrl: 'assets/images/tanker.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Cargo': L.icon({\r\n      iconUrl: 'assets/images/cargo.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Tug': L.icon({\r\n      iconUrl: 'assets/images/tug.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Highspeed': L.icon({\r\n      iconUrl: 'assets/images/highspeed.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Passenger': L.icon({\r\n      iconUrl: 'assets/images/passenger.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    }),\r\n    'Pleasure': L.icon({\r\n      iconUrl: 'assets/images/pleasure.png',\r\n      iconSize: [24, 24],\r\n      iconAnchor: [12, 12]\r\n    })\r\n  };\r\n\r\n  static getIconForShipType(type: number): L.Icon {\r\n    if (type >= 20 && type <= 29) {\r\n      return this.shipIcons['Cargo'];\r\n    } else if (type >= 30 && type <= 39) {\r\n      if (type === 30) {\r\n        return this.shipIcons['Fishing'];\r\n      } else if (type === 31 || type === 32) {\r\n        return this.shipIcons['Tug'];\r\n      } else if (type === 36) {\r\n        return this.shipIcons['Pleasure'];\r\n      } else {\r\n        return this.shipIcons['Unspecified'];\r\n      }\r\n    } else if (type >= 40 && type <= 59) {\r\n      return this.shipIcons['Highspeed'];\r\n    } else if (type >= 60 && type <= 69) {\r\n      return this.shipIcons['Passenger'];\r\n    } else if (type >= 70 && type <= 79) {\r\n      return this.shipIcons['Cargo'];\r\n    } else if (type >= 80 && type <= 89) {\r\n      return this.shipIcons['Tanker'];\r\n    } else if (type >= 90 && type <= 99) {\r\n      return this.shipIcons['Unspecified'];\r\n    } else {\r\n      return this.shipIcons['Unspecified'];\r\n    }\r\n  }\r\n\r\n}\r\n","import * as L from 'leaflet';\r\nimport 'leaflet-draw';\r\nimport 'leaflet.fullscreen';\r\nimport 'leaflet.heat';\r\nimport { Injectable } from '@angular/core';\r\nimport { IconService } from './icon.service';\r\nimport { BaseLayerService } from './base-layer.service';\r\nimport { DrawControlService } from './draw-control.service';\r\nimport * as moment from 'moment';\r\nimport 'moment-duration-format';\r\nimport { CoordinateControlService } from './add-coordinate.service';\r\nimport { SearchControlService } from './searchcontrol.service';\r\nimport { ShapeDataHandlerService } from './shape-data-handler.service';\r\nimport { PlaybackService } from './playback.service'; // Import PlaybackService\r\n\r\nexport interface ShipData {\r\n  mmsi: number;\r\n  lon: number;\r\n  lat: number;\r\n  name: string;\r\n  type: number;\r\n  timestamp: string;\r\n  courseOverGround?: number;\r\n  speedOverGround?: number;\r\n  heading?: number;\r\n  destination?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  private map!: L.Map;\r\n  private layersControl!: L.Control.Layers;\r\n  private drawnItems: L.FeatureGroup = new L.FeatureGroup();\r\n  private heatmapLayer?: L.Layer;\r\n  private coordinateControlService: CoordinateControlService;\r\n  private searchConrolService: SearchControlService | undefined;\r\n  constructor(\r\n    private drawControlService: DrawControlService,\r\n    private searchControlService: SearchControlService, // Inject the SearchControlService\r\n    private shapeDataHandlerService: ShapeDataHandlerService,\r\n  private playbackService: PlaybackService\r\n\r\n\r\n  ) {\r\n    this.coordinateControlService = new CoordinateControlService(); // Initialize CoordinateControlService\r\n\r\n  }\r\n\r\n  initializeMap(containerId: string): L.Map {\r\n    this.map = L.map(containerId, {\r\n      center: [-7.18643057415128, 112.71902662227242],\r\n      zoom: 8,\r\n      fullscreenControl: true,\r\n      fullscreenControlOptions: { position: 'topright' }\r\n    });\r\n\r\n    this.addBaseLayers();\r\n    this.map.addLayer(this.drawnItems);\r\n    this.setupDrawControl();\r\n    this.playbackService.initializePlayback(this.map);\r\n    // Add the coordinate control and search control to the map\r\n    this.coordinateControlService.addCoordinateControl(this.map);\r\n    this.searchControlService.addSearchControl(this.map, this.focusOnShip.bind(this));\r\n    this.drawControlService.loadShapes(this.map, this.drawnItems);\r\n    return this.map;\r\n  }\r\n\r\n  private addBaseLayers(): void {\r\n    const defaultLayer = BaseLayerService.baseLayers['Ocean'];\r\n    defaultLayer.addTo(this.map);\r\n    this.layersControl = L.control.layers(BaseLayerService.baseLayers).addTo(this.map);\r\n  }\r\n\r\n  private setupDrawControl(): void {\r\n    const drawControl = DrawControlService.createDrawControl(this.drawnItems);\r\n    this.map.addControl(drawControl);\r\n\r\n    // Listen for drawing events to trigger the SweetAlert popup\r\n    this.map.on(L.Draw.Event.CREATED, (event: any) => {\r\n      const layer = event.layer;\r\n      this.drawnItems.addLayer(layer);\r\n      // Trigger the SweetAlert popup using ShapeDataHandlerService\r\n      this.shapeDataHandlerService.promptForLayerData(layer);\r\n    });\r\n  }\r\n\r\n\r\n\r\nfocusOnShip(ship: ShipData): void {\r\n  this.map.setView([ship.lat, ship.lon], 18);\r\n}\r\n\r\n// In map.service.ts\r\ngetMapInstance(): L.Map {\r\n  return this.map;\r\n}\r\n\r\n  destroyMap(): void {\r\n    this.map.remove();\r\n  }\r\n}\r\n","// marker.service.ts\r\nimport * as L from 'leaflet';\r\nimport { Injectable } from '@angular/core';\r\nimport { ShipData } from './map.service';\r\nimport { IconService } from './icon.service';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MarkerService {\r\n  private markersLayer: L.LayerGroup = L.layerGroup(); // Initialize markersLayer to hold all markers\r\n  private heatmapLayer?: L.Layer; // Initialize heatmapLayer\r\n\r\n  constructor() {}\r\n\r\n  // Method to add markers to the map\r\n  addMarkers(map: L.Map, data: ShipData[]): void {\r\n    this.markersLayer.clearLayers(); // Clear any existing markers before adding new ones\r\n    data.forEach((ship) => {\r\n      const iconUrl = IconService.getIconForShipType(ship.type).options.iconUrl;\r\n      const shipBearing = ship.heading || ship.courseOverGround || 0;\r\n\r\n      // Create HTML for the rotating ship icon\r\n      const iconHtml = `\r\n        <div class=\"rotating-ship\" style=\"transform: rotate(${shipBearing}deg);\">\r\n          <img src=\"${iconUrl}\" width=\"24\" height=\"24\" />\r\n        </div>\r\n      `;\r\n\r\n      const icon = L.divIcon({\r\n        className: 'custom-ship-icon',\r\n        html: iconHtml,\r\n        iconSize: [24, 24],\r\n        iconAnchor: [12, 12],\r\n      });\r\n\r\n      const marker = L.marker([ship.lat, ship.lon], { icon }).bindPopup(this.createPopupContent(ship));\r\n      this.markersLayer.addLayer(marker);\r\n    });\r\n\r\n    map.addLayer(this.markersLayer); // Add the markersLayer to the map\r\n  }\r\n\r\n  // Method to add a heatmap to the map\r\n  addHeatMap(map: L.Map, data: ShipData[]): void {\r\n    if (this.heatmapLayer) {\r\n      map.removeLayer(this.heatmapLayer); // Remove existing heatmap layer if it exists\r\n    }\r\n    const heatData: L.HeatLatLngTuple[] = data.map((ship) => [ship.lat, ship.lon, 1.0]);\r\n    this.heatmapLayer = L.heatLayer(heatData, { radius: 35, blur: 15, maxZoom: 17 }).addTo(map);\r\n  }\r\n\r\n  // Private method to create popup content for the marker\r\n  private createPopupContent(ship: ShipData): string {\r\n    const timeAgo = this.getTimeAgo(ship.timestamp);\r\n    return `\r\n      <div class=\"marker-popup\">\r\n        <h3>${ship.name}</h3>\r\n        <ul>\r\n          <li>ID: ${ship.mmsi}</li>\r\n          <li>Name: ${ship.name}</li>\r\n          <li>Type: ${ship.type}</li>\r\n          <li>Coordinates: ${ship.lat}, ${ship.lon}</li>\r\n          <li>Destination: ${ship.destination || 'N/A'}</li>\r\n          <li>Course Over Ground: ${ship.courseOverGround || 'N/A'}</li>\r\n          <li>Speed Over Ground: ${ship.speedOverGround || 'N/A'}</li>\r\n          <li>Heading: ${ship.heading || 'N/A'}</li>\r\n          <li>Last Received: ${timeAgo}</li>\r\n        </ul>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Private method to calculate the time ago for the marker's data\r\n  private getTimeAgo(timestamp: string): string {\r\n    const now = moment();\r\n    const then = moment(timestamp, 'DD-MM-YYYY HH:mm:ss');\r\n    const duration = moment.duration(now.diff(then));\r\n\r\n    const days = duration.days();\r\n    const hours = duration.hours();\r\n    const minutes = duration.minutes();\r\n\r\n    return `${days} days ${hours} hours ${minutes} minutes ago`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nexport interface Notification {\r\n  message: string;\r\n  timestamp: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  private notificationsSubject = new BehaviorSubject<Notification[]>([]);\r\n  notifications$ = this.notificationsSubject.asObservable();\r\n  private audio = new Audio('../../assets/sound/notification.mp3');\r\n\r\n  constructor(private snackBar: MatSnackBar) {}\r\n\r\n  addNotification(notification: Notification) {\r\n    const currentNotifications = this.notificationsSubject.getValue();\r\n    this.notificationsSubject.next([...currentNotifications, notification]);\r\n    this.playNotificationSound();\r\n    this.showNotificationPopup(notification.message);\r\n  }\r\n\r\n  private playNotificationSound() {\r\n    this.audio.play().catch(error => console.error('Failed to play sound:', error));\r\n  }\r\n  deleteNotification(notification: Notification) {\r\n    const notifications = this.notificationsSubject.getValue().filter(n => n !== notification);\r\n    this.notificationsSubject.next(notifications);\r\n  }\r\n  private showNotificationPopup(message: string) {\r\n    this.snackBar.open(message, 'Close', {\r\n      duration: 5000,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as L from 'leaflet';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlaybackService {\r\n  private map!: L.Map;\r\n\r\n  /**\r\n   * Inisialisasi peta di dalam PlaybackService\r\n   * @param map - Instance Leaflet map yang diterima dari MapService\r\n   */\r\n  initializePlayback(map: L.Map): void {\r\n    this.map = map;\r\n    this.addPlaybackControl();\r\n  }\r\n\r\n  /**\r\n   * Menambahkan kontrol playback kustom ke peta menggunakan Leaflet\r\n   */\r\n  private addPlaybackControl(): void {\r\n    const controlDiv = L.DomUtil.create('div', 'playback-control-container');\r\n    controlDiv.innerHTML = `\r\n      <div class=\"playback-bar\" style=\"display: flex; align-items: center; justify-content: space-between; width: 500px;\">\r\n        <button class=\"control-button\" style=\"background: none; border: none; font-size: 18px; cursor: pointer; color: #333; transition: transform 0.2s ease-in-out; margin: 0 5px;\">\r\n          <i class=\"fa fa-play\"></i>\r\n        </button>\r\n        <button class=\"control-button\" style=\"background: none; border: none; font-size: 18px; cursor: pointer; color: #333; transition: transform 0.2s ease-in-out; margin: 0 5px;\">\r\n          <i class=\"fa fa-undo\"></i>\r\n        </button>\r\n        <input type=\"range\" class=\"time-slider\" min=\"0\" max=\"100\" value=\"50\" style=\"flex: 1; margin: 0 10px; cursor: pointer;\">\r\n        <span class=\"time-display\" style=\"font-size: 14px; color: #333; white-space: nowrap; margin-left: 10px;\">\r\n          17 OCT 2020 17:41:16 UTC\r\n        </span>\r\n        <button class=\"control-button\" style=\"background: none; border: none; font-size: 18px; cursor: pointer; color: #333; transition: transform 0.2s ease-in-out; margin: 0 5px;\">\r\n          <i class=\"fa fa-cog\"></i>\r\n        </button>\r\n        <button class=\"control-button\" style=\"background: none; border: none; font-size: 18px; cursor: pointer; color: #333; transition: transform 0.2s ease-in-out; margin: 0 5px;\">\r\n          <i class=\"fa fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    `;\r\n\r\n    // Membuat kontrol kustom menggunakan L.Control.extend\r\n    const PlaybackControl = L.Control.extend({\r\n      options: {\r\n        position: 'bottomleft', // Posisi default Leaflet\r\n      },\r\n      onAdd: () => {\r\n        return controlDiv;\r\n      },\r\n    });\r\n\r\n    // Menambahkan kontrol kustom ke peta dan mengatur posisinya dengan CSS agar berada di tengah bawah\r\n    this.map.addControl(new PlaybackControl());\r\n\r\n    const mapContainer = this.map.getContainer();\r\n    const playbackControlContainer = document.querySelector('.playback-control-container') as HTMLElement;\r\n    if (playbackControlContainer) {\r\n    // Memastikan kontrol berada di tengah bawah dengan CSS inline\r\n    if (playbackControlContainer) {\r\n      playbackControlContainer.style.position = 'absolute';\r\n      playbackControlContainer.style.bottom = '20px';\r\n      playbackControlContainer.style.left = '50%';\r\n      playbackControlContainer.style.transform = 'translateX(-50%)';\r\n      playbackControlContainer.style.zIndex = '1000';\r\n      playbackControlContainer.style.background = 'rgba(161, 154, 154, 0)';\r\n      playbackControlContainer.style.borderRadius = '8px';\r\n      playbackControlContainer.style.padding = '10px';\r\n      playbackControlContainer.style.boxShadow = '0 2px 6px rgba(0, 0, 0, 0.158)';\r\n      this.centerPlaybackControl(mapContainer, playbackControlContainer);\r\n      this.map.on('resize', () => {\r\n        this.centerPlaybackControl(mapContainer, playbackControlContainer);\r\n      });\r\n    }\r\n  }\r\n}\r\nprivate centerPlaybackControl(mapContainer: HTMLElement, controlContainer: HTMLElement): void {\r\n  const mapWidth = mapContainer.clientWidth;\r\n  const controlWidth = controlContainer.clientWidth;\r\n  controlContainer.style.left = `${(mapWidth - controlWidth) / 1}px`; // Mengatur posisi horizontal ke tengah\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { PolygonZoneService } from '../services/polygon-zone.service';\r\nimport * as turf from '@turf/turf';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\ninterface Coordinate {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PolygonZoneHandler {\r\n\r\n  constructor(private polygonZoneService: PolygonZoneService) {}\r\n\r\n  loadPolygonZones(): Observable<any[]> {\r\n    return this.polygonZoneService.getPolygonZones().pipe(\r\n      map(data => data.map(zone => {\r\n        if (!zone.coordinates || zone.coordinates.length === 0) return null;\r\n        let coordinates = zone.coordinates[0].map((coord: Coordinate) => {\r\n          if (coord && typeof coord.lat === 'number' && typeof coord.lng === 'number') {\r\n            return [coord.lng, coord.lat];\r\n          }\r\n          return null;\r\n        }).filter((coord: Coordinate) => coord !== null);\r\n\r\n        if (coordinates.length >= 3 && coordinates[0] !== coordinates[coordinates.length - 1]) {\r\n          coordinates.push(coordinates[0]);\r\n        }\r\n        if (coordinates.length < 4) return null;\r\n        return { ...zone, coordinates: [coordinates] };\r\n      }).filter(zone => zone !== null))\r\n    );\r\n  }\r\n\r\n  isShipInZone(ship: any, zone: any): boolean {\r\n    try {\r\n      const point = turf.point([ship.lon, ship.lat]);\r\n      const polygon = turf.polygon(zone.coordinates);\r\n      return turf.booleanPointInPolygon(point, polygon);\r\n    } catch (error) {\r\n      console.error('Failed to create polygon or check ship in zone', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PolygonZoneService {\r\n  private apiUrl = 'http://165.154.208.232:3000/api/shapes/polygon'; // Update this URL as per your API endpoint\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPolygonZones(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.apiUrl);\r\n  }\r\n}\r\n","// searchcontrol.service.ts\r\nimport * as L from 'leaflet';\r\nimport { Injectable } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { ShipData } from './map.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchControlService {\r\n  constructor(private dataService: DataService) {}\r\n\r\n  addSearchControl(map: L.Map, focusOnShip: (ship: ShipData) => void): void {\r\n    const searchContainer = L.DomUtil.create('div', 'search-container');\r\n\r\n    // Create the HTML structure for the search bar\r\n    const formField = L.DomUtil.create('div', 'custom-search-field', searchContainer);\r\n    const searchInput = L.DomUtil.create('input', 'search-input', formField) as HTMLInputElement;\r\n\r\n    searchInput.type = 'text';\r\n    searchInput.placeholder = 'Enter MMSI or Ship Name';\r\n\r\n    // Inline styles for positioning\r\n    searchContainer.style.width = '320px';\r\n    searchContainer.style.zIndex = '1000';\r\n\r\n    formField.style.backgroundColor = 'rgba(161, 154, 154, 0)'; // Slightly transparent background\r\n    formField.style.borderRadius = '12px';\r\n    formField.style.padding = '10px';\r\n    formField.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.158)';\r\n\r\n    searchInput.style.width = '100%';\r\n    searchInput.style.padding = '8px';\r\n    searchInput.style.border = 'none';\r\n    searchInput.style.outline = 'none';\r\n    searchInput.style.backgroundColor = 'transparent';\r\n    searchInput.style.color = '#000';\r\n    searchInput.style.fontSize = '16px';\r\n\r\n    L.DomEvent.addListener(searchInput, 'input', () => {\r\n      this.searchShip(searchInput.value, focusOnShip);\r\n    });\r\n\r\n    // Create a custom Leaflet control and handle custom positioning for top center\r\n    const SearchControl = L.Control.extend({\r\n      onAdd: () => searchContainer,\r\n      options: { position: 'topleft' }, // Position placeholder, actual position handled below\r\n    });\r\n\r\n    const searchControlInstance = new SearchControl();\r\n    searchControlInstance.addTo(map);\r\n\r\n    // Override the default Leaflet positioning to place the control at the top center\r\n    const mapContainer = map.getContainer();\r\n    const containerWidth = mapContainer.clientWidth;\r\n    searchContainer.style.position = 'absolute';\r\n    searchContainer.style.top = '10px'; // Adjust vertical position as needed\r\n    searchContainer.style.left = `${(containerWidth - searchContainer.clientWidth) / 2}px`; // Center it horizontally\r\n\r\n    // Recalculate the position on map resize to keep the control centered\r\n    map.on('resize', () => {\r\n      const newContainerWidth = map.getContainer().clientWidth;\r\n      searchContainer.style.left = `${(newContainerWidth - searchContainer.clientWidth) / 2}px`;\r\n    });\r\n  }\r\n\r\n  private searchShip(searchQuery: string, focusOnShip: (ship: ShipData) => void): void {\r\n    if (!searchQuery.trim()) {\r\n      console.warn('Search query is empty');\r\n      return;\r\n    }\r\n\r\n    this.dataService.getShipsData().subscribe((ships: ShipData[]) => {\r\n      const foundShip = ships.find((ship) =>\r\n        ship.name &&\r\n        (ship.mmsi.toString() === searchQuery.trim() ||\r\n          ship.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n      );\r\n\r\n      if (foundShip) {\r\n        focusOnShip(foundShip);\r\n      } else {\r\n        console.warn('Ship not found');\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport Swal from 'sweetalert2';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShapeDataHandlerService {\r\n  private apiUrl = 'http://165.154.208.232:3000/api/shapes';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Prompts the user to enter data for the shape layer using SweetAlert.\r\n   * Ensures that the popup remains visible during fullscreen mode.\r\n   * @param layer - The drawn shape layer (Circle or Polygon)\r\n   */\r\n  promptForLayerData(layer: any): void {\r\n    const coordinates = layer instanceof L.Circle ? layer.getLatLng() : layer.getLatLngs();\r\n\r\n    Swal.fire({\r\n      title: 'Enter Shape Data',\r\n      target: document.body, // Ensures the popup is attached directly to the body element\r\n      html: this.getHtmlForSwal(),\r\n      focusConfirm: false,\r\n      preConfirm: () => this.getShapeDataFromInput()\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const dataToSend = this.createDataObject(result.value, layer, coordinates);\r\n        this.sendDataToServer(dataToSend);\r\n      }\r\n    });\r\n\r\n    // Ensure that the popup is visible during fullscreen\r\n    this.ensurePopupVisibilityInFullscreen();\r\n  }\r\n\r\n  /**\r\n   * Ensures that the SweetAlert popup remains visible even when the map is in fullscreen mode.\r\n   */\r\n  private ensurePopupVisibilityInFullscreen(): void {\r\n    const updatePopupZIndex = () => {\r\n      const swalContainer = document.querySelector('.swal2-container') as HTMLElement;\r\n      if (swalContainer) {\r\n        // Set the z-index to a very high number to ensure visibility during fullscreen\r\n        swalContainer.style.zIndex = '2147483647'; // Highest z-index possible\r\n        swalContainer.style.position = 'fixed'; // Make sure it's fixed to always be on top\r\n      }\r\n    };\r\n\r\n    // Listen for all possible fullscreen change events\r\n    ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'msfullscreenchange'].forEach(eventType => {\r\n      document.addEventListener(eventType, updatePopupZIndex);\r\n    });\r\n\r\n    // Immediately apply the z-index to ensure visibility\r\n    updatePopupZIndex();\r\n  }\r\n\r\n  /**\r\n   * Creates the HTML content for the SweetAlert popup.\r\n   */\r\n  private getHtmlForSwal(): string {\r\n    return `\r\n      <input id=\"mmsi\" class=\"swal2-input\" type=\"number\" placeholder=\"MMSI\" min=\"0\" required>\r\n      <input id=\"name\" class=\"swal2-input\" placeholder=\"Name\" required>\r\n      <select id=\"status\" class=\"swal2-input\">\r\n        <option value=\"\">Choose Status</option>\r\n        <option value=\"Warning\">Warning</option>\r\n        <option value=\"Danger\">Danger</option>\r\n      </select>\r\n      <textarea id=\"description\" class=\"swal2-textarea\" placeholder=\"Description\"></textarea>\r\n    `;\r\n  }\r\n  private createDataObject(inputData: { mmsi: number; name: string; status: string; description: string }, layer: any, coordinates: any): any {\r\n    const color = this.getColorBasedOnStatus(inputData.status);\r\n\r\n    if (layer.setStyle) {\r\n      layer.setStyle({ color });\r\n    }\r\n\r\n    return {\r\n      type: layer instanceof L.Circle ? 'circle' : 'polygon',\r\n      properties: {\r\n        ...inputData,\r\n        color,\r\n        opacity: 0.8\r\n      },\r\n      coordinates: this.getCoordinatesData(layer, coordinates)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Determines the color based on the status of the shape.\r\n   */\r\n  private getColorBasedOnStatus(status: string): string {\r\n    switch (status) {\r\n      case 'Warning': return '#FFFF00'; // Yellow\r\n      case 'Danger': return '#FF0000';  // Red\r\n      default: return '#0000FF';        // Blue\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Extracts coordinates data from the shape layer.\r\n   */\r\n  private getCoordinatesData(layer: any, coordinates: any): any {\r\n    if (layer instanceof L.Circle) {\r\n      return { lat: coordinates.lat, lng: coordinates.lng, radius: layer.getRadius() };\r\n    } else {\r\n      return coordinates.map((latlngs: L.LatLng[]) => latlngs.map(latlng => ({ lat: latlng.lat, lng: latlng.lng })));\r\n    }\r\n  }\r\n  /**\r\n   * Retrieves the shape data from the SweetAlert input fields.\r\n   */\r\n  private getShapeDataFromInput(): { mmsi: number; name: string; status: string; description: string } | null {\r\n    const mmsi = (document.getElementById('mmsi') as HTMLInputElement).value;\r\n    const name = (document.getElementById('name') as HTMLInputElement).value;\r\n    const status = (document.getElementById('status') as HTMLSelectElement).value;\r\n    const description = (document.getElementById('description') as HTMLTextAreaElement).value;\r\n\r\n    // Validate the input data\r\n    if (!mmsi || isNaN(Number(mmsi))) {\r\n      Swal.showValidationMessage('MMSI is required and must be a number');\r\n      return null;\r\n    }\r\n    return { mmsi: Number(mmsi), name, status, description };\r\n  }\r\n\r\n  /**\r\n   * Sends the shape data to the server using HTTP POST.\r\n   */\r\n  private sendDataToServer(data: any): void {\r\n    this.http.post(this.apiUrl, data).pipe(\r\n      tap(response => console.log('Data sent successfully:', response)),\r\n      catchError(error => {\r\n        console.error('Error sending data:', error);\r\n        return throwError(error);\r\n      })\r\n    ).subscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError, Observable, tap, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShapeService {\r\n  private apiUrl = 'http://165.154.208.232:3000/api/shapes'; // URL API backend\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getShapes(): Observable<any> {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n\r\n  addShape(shapeData: any): Observable<any> {\r\n    return this.http.post(this.apiUrl, shapeData);\r\n  }\r\n  // Dalam ShapeDataHandlerService\r\n  deleteShape(shapeId: string): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${shapeId}`).pipe(\r\n      tap(() => console.log(`Deleting shape with id ${shapeId}`)),\r\n      catchError(error => {\r\n        console.error(`Deletion failed for shape with id ${shapeId}:`, error);\r\n        return throwError(() => new Error('Deletion failed'));\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketService {\r\n  private socket: Socket;\r\n\r\n  constructor() {\r\n    this.socket = io('http://165.154.208.232:3000');\r\n  }\r\n\r\n  // Use Observable to handle data streams\r\n  onAisDataUpdate(): Observable<any> {\r\n    return new Observable(observer => {\r\n      this.socket.on('aisDataUpdate', (data) => {\r\n        observer.next(data);\r\n      });\r\n\r\n      // Handle socket disconnect or error\r\n      return () => this.socket.off('aisDataUpdate');\r\n    });\r\n  }\r\n\r\n  onShapeDataUpdate(): Observable<any> {\r\n    return new Observable(observer => {\r\n      this.socket.on('shapeDataUpdate', (data) => {\r\n        observer.next(data);\r\n      });\r\n\r\n      // Handle socket disconnect or error\r\n      return () => this.socket.off('shapeDataUpdate');\r\n    });\r\n  }\r\n\r\n  disconnect(): void {\r\n    if (this.socket.connected) {\r\n      this.socket.disconnect();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n\n}\n","<div class=\"sidenav-header\">\n  <i class=\"fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none\" aria-hidden=\"true\" id=\"iconSidenav\"></i>\n  <a class=\"navbar-brand m-0\" [routerLink]=\"['/dashboard']\">\n    <i class=\"fas fa-ship fa-2x navbar-brand-img text-white\"></i>\n    <span class=\"ms-1 font-weight-bold text-white\">AIS ASSET Web App</span>\n  </a>\n</div>\n\n<hr class=\"horizontal light mt-0 mb-2\" />\n<div class=\"collapse navbar-collapse w-auto\" id=\"sidenav-collapse-main\">\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item mt-3\">\n      <h5 class=\"ps-4 ms-2 text-uppercase text-xs text-white font-weight-bolder opacity-8\">Analytics</h5>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link text-white\" [routerLink]=\"['/dashboard']\" routerLinkActive=\"active bg-gradient-primary\">\n        <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\n          <i class=\"material-icons opacity-10\">dashboard</i>\n        </div>\n        <span class=\"nav-link-text ms-1\">Dashboard</span>\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link text-white\" [routerLink]=\"['/tables']\" routerLinkActive=\"active bg-gradient-primary\">\n        <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\n          <i class=\"material-icons opacity-10\">table_view</i>\n        </div>\n        <span class=\"nav-link-text ms-1\">Tables</span>\n      </a>\n    </li>\n    <li class=\"nav-item mt-3\">\n      <h6 class=\"ps-4 ms-2 text-uppercase text-xs text-white font-weight-bolder opacity-8\">Our Fitur</h6>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link text-white\" [routerLink]=\"['/newfitur']\" routerLinkActive=\"active bg-gradient-primary\">\n        <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\n          <i class=\"material-icons opacity-10\">map</i>\n        </div>\n        <span class=\"nav-link-text ms-1\">Map</span>\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link text-white\" [routerLink]=\"['/notifications']\" routerLinkActive=\"active bg-gradient-primary\">\n        <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\n          <i class=\"material-icons opacity-10\">notifications</i>\n        </div>\n        <span class=\"nav-link-text ms-1\">Notifications</span>\n      </a>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PolygonZoneHandler } from '../main/polygon-zone-handler';\nimport { CircleZoneHandler } from '../main/circle-zone-handler';\nimport { DataService } from '../data.service';\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css']\n})\nexport class TablesComponent implements OnInit {\n  polygonZones: any[] = [];\n  circleZones: any[] = [];\n  ships: any[] = [];\n  filteredShips = new MatTableDataSource<any>();\n  displayedColumns: string[] = ['mmsi', 'name', 'lat', 'lon', 'type', 'timestamp', 'destination'];\n  selectedZoneType: string = '';\n  pageSize: number = 25;\n  selectedZoneName: string = '';\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n\n  constructor(\n    private polygonZoneHandler: PolygonZoneHandler,\n    private circleZoneHandler: CircleZoneHandler,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {\n    this.loadPolygonZones();\n    this.loadCircleZones();\n    this.loadShips();\n  }\n\n  ngAfterViewInit() {\n    this.filteredShips.paginator = this.paginator;\n  }\n\n  loadPolygonZones() {\n    this.polygonZoneHandler.loadPolygonZones().subscribe(data => {\n      this.polygonZones = data;\n    });\n  }\n\n  loadCircleZones() {\n    this.circleZoneHandler.loadCircleZones().subscribe(data => {\n      this.circleZones = data;\n    });\n  }\n\n  loadShips() {\n    this.dataService.getShipsData().subscribe(data => {\n      this.ships = data;\n      this.updateAllZoneCounts(); // Update ship counts for all zones after loading ships\n    }, error => console.error('Failed to load ships:', error));\n  }\n\n  onZoneTypeChange(type: string) {\n    this.selectedZoneType = type;\n    this.filteredShips.data = [];\n  }\n\n  onZoneChange(zone: any) {\n    this.selectedZoneName = zone.properties?.name || 'Unknown Zone';\n    this.filteredShips.data = this.ships.filter(ship => this.isShipInZone(ship, zone, this.selectedZoneType));\n  }\n\n  onPageChange(event: PageEvent) {\n    this.pageSize = event.pageSize;\n  }\n\n  onPageSizeChange(size: number) {\n    this.pageSize = size;\n    this.paginator.pageSize = size;\n  }\n\n  isShipInZone(ship: any, zone: any, type: string): boolean {\n    if (type === 'circle') {\n      return this.circleZoneHandler.isShipInZone(ship, zone);\n    } else if (type === 'polygon') {\n      return this.polygonZoneHandler.isShipInZone(ship, zone);\n    }\n    return false;\n  }\n\n  updateAllZoneCounts() {\n    // This method is kept in case you want to update counts for zones without selection\n  }\n\n  downloadPDF() {\n    const doc = new jsPDF();\n    const zoneName = this.selectedZoneName || 'Unknown Zone';\n    const date = new Date();\n    const dateString = date.toISOString().split('T')[0]; // Format: YYYY-MM-DD\n    const fileName = `Report_of_${zoneName}_${dateString}.pdf`;\n\n    const head = [['MMSI', 'Name', 'Latitude', 'Longitude', 'Type', 'Timestamp', 'Destination']];\n    const data = this.filteredShips.data.map((ship: any) => [ship.mmsi, ship.name, ship.lat, ship.lon, ship.type, ship.timestamp, ship.destination]);\n\n    doc.text(`Laporan Zona ${zoneName}`, 14, 10);\n    doc.text(` ${dateString}`, 14, 20);\n    doc.text(`Jumlah Kapal: ${this.filteredShips.data.length}`, 14, 30);\n\n    autoTable(doc, {\n      head: head,\n      body: data,\n      styles: {\n        fontSize: 8\n      },\n      margin: { top: 40 }\n    });\n\n    doc.save(fileName);\n  }\n}\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%;\">\r\n        <mat-label style=\"color: black;\">Select Zone Type</mat-label>\r\n        <mat-select style=\"color: black;\" (selectionChange)=\"onZoneTypeChange($event.value)\">\r\n          <mat-option value=\"polygon\">Polygon Zone</mat-option>\r\n          <mat-option value=\"circle\">Circle Zone</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%;\" *ngIf=\"selectedZoneType === 'polygon'\">\r\n        <mat-label style=\"color: black;\">Select Polygon Zone</mat-label>\r\n        <mat-select style=\"color: black;\" (selectionChange)=\"onZoneChange($event.value)\">\r\n          <mat-option style=\"color: black;\" *ngFor=\"let zone of polygonZones\" [value]=\"zone\">{{ zone.properties?.name }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"fill\" style=\"width: 100%;\" *ngIf=\"selectedZoneType === 'circle'\">\r\n        <mat-label style=\"color: black;\">Select Circle Zone</mat-label>\r\n        <mat-select style=\"color: black;\" (selectionChange)=\"onZoneChange($event.value)\">\r\n          <mat-option style=\"color: black;\" *ngFor=\"let zone of circleZones\" [value]=\"zone\">{{ zone.properties?.name }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-4\">\r\n    <div class=\"col-md-12\">\r\n      <h3>Ships in Selected Zone: {{ filteredShips.data.length }}</h3>\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label style=\"color: black;\">Rows per page</mat-label>\r\n        <mat-select style=\"color: black;\" (selectionChange)=\"onPageSizeChange($event.value)\" [(value)]=\"pageSize\">\r\n          <mat-option style=\"color: black;\" *ngFor=\"let size of [10, 25, 100, 250]\" [value]=\"size\">{{ size }}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n      <table mat-table [dataSource]=\"filteredShips\" matSort class=\"mat-elevation-z8\">\r\n        <ng-container matColumnDef=\"mmsi\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>MMSI</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.mmsi }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.name }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"lat\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Latitude</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.lat }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"lon\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Longitude</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.lon }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"type\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.type }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"timestamp\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Timestamp</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.timestamp }}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"destination\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Destination</th>\r\n          <td mat-cell *matCellDef=\"let ship\">{{ ship.destination }}</td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      <mat-paginator [length]=\"filteredShips.data.length\"\r\n                     [pageSize]=\"pageSize\"\r\n                     [pageSizeOptions]=\"[10, 25, 100, 250]\"\r\n                     (page)=\"onPageChange($event)\">\r\n      </mat-paginator>\r\n      <button mat-raised-button color=\"primary\" (click)=\"downloadPDF()\">Download PDF</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-uiconfigurator',\n  templateUrl: './uiconfigurator.component.html',\n  styleUrls: ['./uiconfigurator.component.css']\n})\nexport class UiconfiguratorComponent {\n\n}\n","\n  <hr class=\"horizontal dark my-1\" />\n  <div class=\"card-body pt-sm-3 pt-0\">\n    <div>\n      <h6 class=\"mb-0\">Sidebar Colors</h6>\n    </div>\n    <a href=\"javascript:void(0)\" class=\"switch-trigger background-color\">\n      <div class=\"badge-colors my-2 text-start\">\n        <span\n          class=\"badge filter bg-gradient-primary active\"\n          data-color=\"primary\"\n          onclick=\"sidebarColor(this)\"\n        ></span>\n        <span\n          class=\"badge filter bg-gradient-dark\"\n          data-color=\"dark\"\n          onclick=\"sidebarColor(this)\"\n        ></span>\n        <span\n          class=\"badge filter bg-gradient-info\"\n          data-color=\"info\"\n          onclick=\"sidebarColor(this)\"\n        ></span>\n        <span\n          class=\"badge filter bg-gradient-success\"\n          data-color=\"success\"\n          onclick=\"sidebarColor(this)\"\n        ></span>\n        <span\n          class=\"badge filter bg-gradient-warning\"\n          data-color=\"warning\"\n          onclick=\"sidebarColor(this)\"\n        ></span>\n        <span\n          class=\"badge filter bg-gradient-danger\"\n          data-color=\"danger\"\n          onclick=\"sidebarColor(this)\"\n        ></span>\n      </div>\n    </a>\n\n\n\n    <div class=\"mt-3\">\n      <h6 class=\"mb-0\">Sidenav Type</h6>\n      <p class=\"text-sm\">Choose between 2 different sidenav types.</p>\n    </div>\n    <div class=\"d-flex\">\n      <button\n        class=\"btn bg-gradient-dark px-3 mb-2 active\"\n        data-class=\"bg-gradient-dark\"\n        onclick=\"sidebarType(this)\"\n      >\n        Dark\n      </button>\n      <button\n        class=\"btn bg-gradient-dark px-3 mb-2 ms-2\"\n        data-class=\"bg-transparent\"\n        onclick=\"sidebarType(this)\"\n      >\n        Transparent\n      </button>\n      <button\n        class=\"btn bg-gradient-dark px-3 mb-2 ms-2\"\n        data-class=\"bg-white\"\n        onclick=\"sidebarType(this)\"\n      >\n        White\n      </button>\n    </div>\n\n    <hr class=\"horizontal dark my-3\" />\n    <div class=\"mt-2 d-flex\">\n      <h6 class=\"mb-0\">Dark / Light</h6>\n      <div class=\"form-check form-switch ps-0 ms-auto my-auto\">\n        <input\n          class=\"form-check-input mt-1 ms-auto\"\n          type=\"checkbox\"\n          id=\"dark-version\"\n          onclick=\"toggleDarkMode(this)\"\n        />\n      </div>\n    </div>\n\n    <div class=\"w-100 text-center\">\n      <a\n        class=\"github-button\"\n        href=\"https:/therichpost.com\"\n        data-icon=\"octicon-star\"\n        data-size=\"large\"\n        data-show-count=\"true\"\n        aria-label=\"Star creativetimofficial/material-dashboard on GitHub\"\n        >Laksana Future</a\n      >\n      <h6 class=\"mt-3\">Laksana Future</h6>\n      <a href=\"#\" class=\"btn btn-dark mb-0 me-2\" target=\"_blank\">\n        <i class=\"fab fa-twitter me-1\" aria-hidden=\"true\"></i> Tweet\n      </a>\n      <a href=\"#\" class=\"btn btn-dark mb-0 me-2\" target=\"_blank\">\n        <i class=\"fab fa-facebook-square me-1\" aria-hidden=\"true\"></i>\n        Share\n      </a>\n    </div>\n  </div>\n\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./af\": 35528,\n\t\"./af.js\": 35528,\n\t\"./ar\": 1036,\n\t\"./ar-dz\": 17579,\n\t\"./ar-dz.js\": 17579,\n\t\"./ar-kw\": 69588,\n\t\"./ar-kw.js\": 69588,\n\t\"./ar-ly\": 11650,\n\t\"./ar-ly.js\": 11650,\n\t\"./ar-ma\": 93258,\n\t\"./ar-ma.js\": 93258,\n\t\"./ar-ps\": 25467,\n\t\"./ar-ps.js\": 25467,\n\t\"./ar-sa\": 54085,\n\t\"./ar-sa.js\": 54085,\n\t\"./ar-tn\": 90287,\n\t\"./ar-tn.js\": 90287,\n\t\"./ar.js\": 1036,\n\t\"./az\": 89757,\n\t\"./az.js\": 89757,\n\t\"./be\": 59620,\n\t\"./be.js\": 59620,\n\t\"./bg\": 31139,\n\t\"./bg.js\": 31139,\n\t\"./bm\": 4042,\n\t\"./bm.js\": 4042,\n\t\"./bn\": 19641,\n\t\"./bn-bd\": 19126,\n\t\"./bn-bd.js\": 19126,\n\t\"./bn.js\": 19641,\n\t\"./bo\": 494,\n\t\"./bo.js\": 494,\n\t\"./br\": 20934,\n\t\"./br.js\": 20934,\n\t\"./bs\": 26274,\n\t\"./bs.js\": 26274,\n\t\"./ca\": 45831,\n\t\"./ca.js\": 45831,\n\t\"./cs\": 92354,\n\t\"./cs.js\": 92354,\n\t\"./cv\": 79692,\n\t\"./cv.js\": 79692,\n\t\"./cy\": 58774,\n\t\"./cy.js\": 58774,\n\t\"./da\": 38955,\n\t\"./da.js\": 38955,\n\t\"./de\": 21557,\n\t\"./de-at\": 24954,\n\t\"./de-at.js\": 24954,\n\t\"./de-ch\": 81881,\n\t\"./de-ch.js\": 81881,\n\t\"./de.js\": 21557,\n\t\"./dv\": 16475,\n\t\"./dv.js\": 16475,\n\t\"./el\": 38877,\n\t\"./el.js\": 38877,\n\t\"./en-au\": 70454,\n\t\"./en-au.js\": 70454,\n\t\"./en-ca\": 67356,\n\t\"./en-ca.js\": 67356,\n\t\"./en-gb\": 10456,\n\t\"./en-gb.js\": 10456,\n\t\"./en-ie\": 28789,\n\t\"./en-ie.js\": 28789,\n\t\"./en-il\": 85471,\n\t\"./en-il.js\": 85471,\n\t\"./en-in\": 39664,\n\t\"./en-in.js\": 39664,\n\t\"./en-nz\": 97672,\n\t\"./en-nz.js\": 97672,\n\t\"./en-sg\": 80805,\n\t\"./en-sg.js\": 80805,\n\t\"./eo\": 87390,\n\t\"./eo.js\": 87390,\n\t\"./es\": 1564,\n\t\"./es-do\": 51473,\n\t\"./es-do.js\": 51473,\n\t\"./es-mx\": 92089,\n\t\"./es-mx.js\": 92089,\n\t\"./es-us\": 84156,\n\t\"./es-us.js\": 84156,\n\t\"./es.js\": 1564,\n\t\"./et\": 6513,\n\t\"./et.js\": 6513,\n\t\"./eu\": 7856,\n\t\"./eu.js\": 7856,\n\t\"./fa\": 2378,\n\t\"./fa.js\": 2378,\n\t\"./fi\": 22687,\n\t\"./fi.js\": 22687,\n\t\"./fil\": 80032,\n\t\"./fil.js\": 80032,\n\t\"./fo\": 46845,\n\t\"./fo.js\": 46845,\n\t\"./fr\": 8875,\n\t\"./fr-ca\": 56425,\n\t\"./fr-ca.js\": 56425,\n\t\"./fr-ch\": 41746,\n\t\"./fr-ch.js\": 41746,\n\t\"./fr.js\": 8875,\n\t\"./fy\": 67037,\n\t\"./fy.js\": 67037,\n\t\"./ga\": 11217,\n\t\"./ga.js\": 11217,\n\t\"./gd\": 37010,\n\t\"./gd.js\": 37010,\n\t\"./gl\": 51931,\n\t\"./gl.js\": 51931,\n\t\"./gom-deva\": 64488,\n\t\"./gom-deva.js\": 64488,\n\t\"./gom-latn\": 39566,\n\t\"./gom-latn.js\": 39566,\n\t\"./gu\": 34984,\n\t\"./gu.js\": 34984,\n\t\"./he\": 69090,\n\t\"./he.js\": 69090,\n\t\"./hi\": 42085,\n\t\"./hi.js\": 42085,\n\t\"./hr\": 38787,\n\t\"./hr.js\": 38787,\n\t\"./hu\": 2901,\n\t\"./hu.js\": 2901,\n\t\"./hy-am\": 59819,\n\t\"./hy-am.js\": 59819,\n\t\"./id\": 44074,\n\t\"./id.js\": 44074,\n\t\"./is\": 70715,\n\t\"./is.js\": 70715,\n\t\"./it\": 31746,\n\t\"./it-ch\": 77040,\n\t\"./it-ch.js\": 77040,\n\t\"./it.js\": 31746,\n\t\"./ja\": 3180,\n\t\"./ja.js\": 3180,\n\t\"./jv\": 34346,\n\t\"./jv.js\": 34346,\n\t\"./ka\": 65538,\n\t\"./ka.js\": 65538,\n\t\"./kk\": 79772,\n\t\"./kk.js\": 79772,\n\t\"./km\": 87905,\n\t\"./km.js\": 87905,\n\t\"./kn\": 79125,\n\t\"./kn.js\": 79125,\n\t\"./ko\": 69140,\n\t\"./ko.js\": 69140,\n\t\"./ku\": 2354,\n\t\"./ku-kmr\": 44662,\n\t\"./ku-kmr.js\": 44662,\n\t\"./ku.js\": 2354,\n\t\"./ky\": 63768,\n\t\"./ky.js\": 63768,\n\t\"./lb\": 14016,\n\t\"./lb.js\": 14016,\n\t\"./lo\": 83169,\n\t\"./lo.js\": 83169,\n\t\"./lt\": 62353,\n\t\"./lt.js\": 62353,\n\t\"./lv\": 83243,\n\t\"./lv.js\": 83243,\n\t\"./me\": 52338,\n\t\"./me.js\": 52338,\n\t\"./mi\": 35555,\n\t\"./mi.js\": 35555,\n\t\"./mk\": 85794,\n\t\"./mk.js\": 85794,\n\t\"./ml\": 53151,\n\t\"./ml.js\": 53151,\n\t\"./mn\": 46458,\n\t\"./mn.js\": 46458,\n\t\"./mr\": 69165,\n\t\"./mr.js\": 69165,\n\t\"./ms\": 8680,\n\t\"./ms-my\": 87477,\n\t\"./ms-my.js\": 87477,\n\t\"./ms.js\": 8680,\n\t\"./mt\": 79684,\n\t\"./mt.js\": 79684,\n\t\"./my\": 40285,\n\t\"./my.js\": 40285,\n\t\"./nb\": 45922,\n\t\"./nb.js\": 45922,\n\t\"./ne\": 29040,\n\t\"./ne.js\": 29040,\n\t\"./nl\": 5066,\n\t\"./nl-be\": 74460,\n\t\"./nl-be.js\": 74460,\n\t\"./nl.js\": 5066,\n\t\"./nn\": 53693,\n\t\"./nn.js\": 53693,\n\t\"./oc-lnc\": 88676,\n\t\"./oc-lnc.js\": 88676,\n\t\"./pa-in\": 92341,\n\t\"./pa-in.js\": 92341,\n\t\"./pl\": 57416,\n\t\"./pl.js\": 57416,\n\t\"./pt\": 84344,\n\t\"./pt-br\": 30113,\n\t\"./pt-br.js\": 30113,\n\t\"./pt.js\": 84344,\n\t\"./ro\": 72643,\n\t\"./ro.js\": 72643,\n\t\"./ru\": 61305,\n\t\"./ru.js\": 61305,\n\t\"./sd\": 96095,\n\t\"./sd.js\": 96095,\n\t\"./se\": 74486,\n\t\"./se.js\": 74486,\n\t\"./si\": 58742,\n\t\"./si.js\": 58742,\n\t\"./sk\": 96722,\n\t\"./sk.js\": 96722,\n\t\"./sl\": 3345,\n\t\"./sl.js\": 3345,\n\t\"./sq\": 52416,\n\t\"./sq.js\": 52416,\n\t\"./sr\": 39450,\n\t\"./sr-cyrl\": 50501,\n\t\"./sr-cyrl.js\": 50501,\n\t\"./sr.js\": 39450,\n\t\"./ss\": 32222,\n\t\"./ss.js\": 32222,\n\t\"./sv\": 9454,\n\t\"./sv.js\": 9454,\n\t\"./sw\": 19638,\n\t\"./sw.js\": 19638,\n\t\"./ta\": 96494,\n\t\"./ta.js\": 96494,\n\t\"./te\": 94435,\n\t\"./te.js\": 94435,\n\t\"./tet\": 25003,\n\t\"./tet.js\": 25003,\n\t\"./tg\": 13706,\n\t\"./tg.js\": 13706,\n\t\"./th\": 16025,\n\t\"./th.js\": 16025,\n\t\"./tk\": 59780,\n\t\"./tk.js\": 59780,\n\t\"./tl-ph\": 22068,\n\t\"./tl-ph.js\": 22068,\n\t\"./tlh\": 39167,\n\t\"./tlh.js\": 39167,\n\t\"./tr\": 32494,\n\t\"./tr.js\": 32494,\n\t\"./tzl\": 58707,\n\t\"./tzl.js\": 58707,\n\t\"./tzm\": 91296,\n\t\"./tzm-latn\": 34532,\n\t\"./tzm-latn.js\": 34532,\n\t\"./tzm.js\": 91296,\n\t\"./ug-cn\": 12086,\n\t\"./ug-cn.js\": 12086,\n\t\"./uk\": 85069,\n\t\"./uk.js\": 85069,\n\t\"./ur\": 29304,\n\t\"./ur.js\": 29304,\n\t\"./uz\": 95115,\n\t\"./uz-latn\": 97609,\n\t\"./uz-latn.js\": 97609,\n\t\"./uz.js\": 95115,\n\t\"./vi\": 34802,\n\t\"./vi.js\": 34802,\n\t\"./x-pseudo\": 65605,\n\t\"./x-pseudo.js\": 65605,\n\t\"./yo\": 88456,\n\t\"./yo.js\": 88456,\n\t\"./zh-cn\": 23272,\n\t\"./zh-cn.js\": 23272,\n\t\"./zh-hk\": 9402,\n\t\"./zh-hk.js\": 9402,\n\t\"./zh-mo\": 48101,\n\t\"./zh-mo.js\": 48101,\n\t\"./zh-tw\": 40262,\n\t\"./zh-tw.js\": 40262\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */"],"names":["RouterModule","DashboardComponent","TablesComponent","NewfiturComponent","NotificationComponent","LoginComponent","AuthGuard","MainlayoutComponent","RegisterComponent","routes","path","component","children","canActivate","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","combineLatest","AppComponent","constructor","dataService","circleZoneHandler","polygonZoneHandler","title","polygonZones","circleZones","ships","previousShips","ngOnInit","loadZones","monitorShips","loadPolygonZones","subscribe","zones","loadCircleZones","getShipsDataPeriodically","length","checkShipsInZones","i0","ɵɵdirectiveInject","DataService","i2","CircleZoneHandler","i3","PolygonZoneHandler","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement","BrowserModule","BrowserAnimationsModule","NavbarComponent","SidebarComponent","MainComponent","FooterComponent","UiconfiguratorComponent","AppService","HttpClientModule","NgApexchartsModule","LeafletMapComponent","ChartComponent","FormsModule","MatTableModule","MatPaginatorModule","MatSortModule","MatFormFieldModule","MatSelectModule","MatListModule","MatIconModule","MatCardModule","MatSnackBarModule","MatDialogModule","MatButtonModule","MatInputModule","AppModule","bootstrap","declarations","http","apiUrl","isPluginVisible","get","endpoint","post","data","callToggleSidenav","toggleSidenav","togglePluginVisibility","closeFixedPlugin","getIsPluginVisible","ɵɵinject","HttpClient","factory","ɵfac","providedIn","inputs","chartOptions","chartId","consts","ChartComponent_Template","ɵɵproperty","series","chart","stroke","ɵɵpureFunction0","_c0","dataLabels","grid","xaxis","yaxis","fill","markers","tooltip","plotOptions","labels","_c1","legend","colors","subtitle","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","zone_r3","ɵɵadvance","ɵɵtextInterpolate","properties","name","ɵɵlistener","DashboardComponent_div_11_Template_mat_select_selectionChange_4_listener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","onZoneChange","value","ɵɵtemplate","DashboardComponent_div_11_mat_option_5_Template","ctx_r0","zone_r7","DashboardComponent_div_12_Template_mat_select_selectionChange_4_listener","_r9","ctx_r8","DashboardComponent_div_12_mat_option_5_Template","ctx_r1","shipTypeNames","selectedZoneType","selectedZone","pieChartOptions","width","type","text","responsive","breakpoint","options","position","barChartOptions","height","categories","lineChartOptions","enabled","area","fillTo","loadShips","getShipsData","updateChart","error","console","generateChartData","filteredShips","shipTypes","shipTypesOverTime","forEach","ship","typeName","timestampParts","timestamp","split","dateParts","Date","toLocaleDateString","Object","values","keys","timestamps","sort","areaSeries","map","label","onZoneTypeChange","zone","filter","isShipInZone","viewQuery","DashboardComponent_Query","DashboardComponent_Template_mat_select_selectionChange_6_listener","DashboardComponent_div_11_Template","DashboardComponent_div_12_Template","io","interval","Subject","switchMap","notificationService","zonesApiUrl","dataLog","socketUrl","shipDataStream","shipZoneStatus","initializeWebSocketConnection","getAisLogData","getZonesData","pipe","zoneId","JSON","stringify","coordinates","previousStatus","mmsi","notificationMessage","log","addNotification","message","toLocaleTimeString","socket","on","next","getShipDataStream","asObservable","i4","NotificationService","FooterComponent_Template","authService","router","route","state","isLoggedIn","navigate","AuthService","Router","throttleTime","mapService","socketService","markerService","heatmapService","searchQuery","isFullscreen","initializeMap","setupRealtimeUpdates","loadAndDisplayData","ngOnDestroy","destroyMap","disconnect","dataSubscription","unsubscribe","aisUpdateSubscription","shapeUpdateSubscription","addMarkers","getMapInstance","addHeatMap","onAisDataUpdate","onShapeDataUpdate","MapService","SocketService","MarkerService","i5","HeatmapService","LeafletMapComponent_Template","ɵɵtextInterpolate1","errorMessage","email","password","login","credentials","response","userName","token","localStorage","setItem","saveUserName","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_15_listener","LoginComponent_Template_input_ngModelChange_19_listener","LoginComponent_Template_input_ngModelChange_23_listener","LoginComponent_div_35_Template","turf","circleZoneService","getCircleZones","radius","lat","lng","center","distance","lon","units","CircleZoneService","zone_r2","polygonShipCounts","circleShipCounts","currentSelectedPolygonZone","currentSelectedCircleZone","updateAllZoneCounts","onPolygonZoneSelected","updateShipCountInZone","onCircleZoneSelected","_id","count","MainComponent_Template","MainComponent_Template_mat_select_selectionChange_13_listener","MainComponent_mat_option_14_Template","MainComponent_Template_mat_select_selectionChange_27_listener","MainComponent_mat_option_28_Template","polygonZoneService","getPolygonZones","coord","push","point","polygon","booleanPointInPolygon","PolygonZoneService","MainlayoutComponent_Template","notification_r1","appService","notifications","logout","notifications$","getUserName","NavbarComponent_Template","NavbarComponent_Template_a_click_17_listener","NavbarComponent_Template_a_click_21_listener","NavbarComponent_Template_a_click_24_listener","NavbarComponent_Template_button_click_35_listener","NavbarComponent_li_45_Template","NavbarComponent_Template_a_click_47_listener","ɵɵclassProp","NewfiturComponent_Template","NotificationComponent_li_6_Template_button_click_6_listener","restoredCtx","_r3","$implicit","ctx_r2","deleteNotification","ɵɵpipeBind2","notification","NotificationComponent_Template","NotificationComponent_li_6_Template","successMessage","username","role","register","userData","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_15_listener","RegisterComponent_Template_input_ngModelChange_19_listener","RegisterComponent_Template_input_ngModelChange_23_listener","RegisterComponent_Template_input_ngModelChange_27_listener","RegisterComponent_div_35_Template","RegisterComponent_div_36_Template","L","Swal","CoordinateControlService","trackCursor","addCoordinateControl","coordinateCardTemplate","CoordinateControl","Control","extend","onAdd","div","DomUtil","create","innerHTML","applyInlineStyles","setupSliderToggle","coordinateControl","addTo","updateCoordinates","event","latlng","lockCoordinates","lockedMarker","removeLayer","marker","fire","html","toFixed","convertToDMS","confirmButtonText","toggleInput","querySelector","toggleLabel","addEventListener","checked","innerText","undefined","cursorLatLng","latDecimalElement","document","getElementById","lngDecimalElement","latDMSElement","lngDMSElement","latLng","getCenter","coordinate","absolute","Math","abs","degrees","floor","minutesNotTruncated","minutes","seconds","direction","style","backgroundColor","color","borderRadius","boxShadow","overflow","margin","bottom","left","header","padding","fontWeight","textAlign","body","coordinateLines","querySelectorAll","line","marginBottom","sliderStyle","createElement","head","appendChild","removeItem","getItem","BaseLayerService","baseLayers","tileLayer","maxZoom","attribution","DrawControlService","shapeDataHandler","shapeService","createDrawControl","drawnItems","Draw","edit","featureGroup","draw","circle","shapeOptions","rectangle","polyline","circlemarker","handleDrawEvents","Event","CREATED","layer","addLayer","promptForLayerData","DELETED","layers","eachLayer","shapeId","deleteShape","res","err","alert","loadShapes","getShapes","shapes","shape","bindPopupToLayer","status","description","content","Circle","Polygon","latlngs","bindPopup","openPopup","ShapeDataHandlerService","ShapeService","heatmapLayer","heatData","heatLayer","blur","IconService","shipIcons","icon","iconUrl","iconSize","iconAnchor","getIconForShipType","drawControlService","searchControlService","shapeDataHandlerService","playbackService","FeatureGroup","coordinateControlService","containerId","zoom","fullscreenControl","fullscreenControlOptions","addBaseLayers","setupDrawControl","initializePlayback","addSearchControl","focusOnShip","bind","defaultLayer","layersControl","control","drawControl","addControl","setView","remove","SearchControlService","PlaybackService","moment","markersLayer","layerGroup","clearLayers","shipBearing","heading","courseOverGround","iconHtml","divIcon","className","createPopupContent","timeAgo","getTimeAgo","destination","speedOverGround","now","then","duration","diff","days","hours","BehaviorSubject","snackBar","notificationsSubject","audio","Audio","currentNotifications","getValue","playNotificationSound","showNotificationPopup","play","catch","n","open","MatSnackBar","addPlaybackControl","controlDiv","PlaybackControl","mapContainer","getContainer","playbackControlContainer","transform","zIndex","background","centerPlaybackControl","controlContainer","mapWidth","clientWidth","controlWidth","searchContainer","formField","searchInput","placeholder","border","outline","fontSize","DomEvent","addListener","searchShip","SearchControl","searchControlInstance","containerWidth","top","newContainerWidth","trim","warn","foundShip","find","toString","toLowerCase","includes","throwError","catchError","tap","getLatLng","getLatLngs","target","getHtmlForSwal","focusConfirm","preConfirm","getShapeDataFromInput","result","dataToSend","createDataObject","sendDataToServer","ensurePopupVisibilityInFullscreen","updatePopupZIndex","swalContainer","eventType","inputData","getColorBasedOnStatus","setStyle","opacity","getCoordinatesData","getRadius","isNaN","Number","showValidationMessage","addShape","shapeData","delete","Error","Observable","observer","off","connected","SidebarComponent_Template","_c2","_c3","MatPaginator","MatTableDataSource","jsPDF","autoTable","zone_r20","TablesComponent_mat_form_field_12_Template_mat_select_selectionChange_3_listener","_r22","ctx_r21","TablesComponent_mat_form_field_12_mat_option_4_Template","zone_r24","TablesComponent_mat_form_field_13_Template_mat_select_selectionChange_3_listener","_r26","ctx_r25","TablesComponent_mat_form_field_13_mat_option_4_Template","size_r27","ship_r28","ship_r29","ship_r30","ship_r31","ship_r32","ship_r33","ship_r34","displayedColumns","pageSize","selectedZoneName","ngAfterViewInit","paginator","onPageChange","onPageSizeChange","size","downloadPDF","doc","zoneName","date","dateString","toISOString","fileName","styles","save","TablesComponent_Query","TablesComponent_Template_mat_select_selectionChange_6_listener","TablesComponent_mat_form_field_12_Template","TablesComponent_mat_form_field_13_Template","TablesComponent_Template_mat_select_selectionChange_21_listener","TablesComponent_Template_mat_select_valueChange_21_listener","TablesComponent_mat_option_22_Template","ɵɵelementContainerStart","TablesComponent_th_25_Template","TablesComponent_td_26_Template","ɵɵelementContainerEnd","TablesComponent_th_28_Template","TablesComponent_td_29_Template","TablesComponent_th_31_Template","TablesComponent_td_32_Template","TablesComponent_th_34_Template","TablesComponent_td_35_Template","TablesComponent_th_37_Template","TablesComponent_td_38_Template","TablesComponent_th_40_Template","TablesComponent_td_41_Template","TablesComponent_th_43_Template","TablesComponent_td_44_Template","TablesComponent_tr_45_Template","TablesComponent_tr_46_Template","TablesComponent_Template_mat_paginator_page_47_listener","TablesComponent_Template_button_click_48_listener","UiconfiguratorComponent_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[56]}